<?xml version="1.0" encoding="utf-16"?>
<ArrayOfElementPropertyBag xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="f62264d2-2763-4bb2-9ef6-390074d74f28" Visible="true" Text="ReceptorDescription.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>254</X>
        <Y>-412</Y>
      </Location>
      <Size>
        <Width>170</Width>
        <Height>25</Height>
      </Size>
      <X>254</X>
      <Y>-412</Y>
      <Width>170</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>ReceptorDescription.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System.Collections.Generic;\r\n\r\nnamespace App\r\n{\r\n    public class ReceptorDescription\r\n    {\r\n        /// &lt;summary&gt;\r\n        /// The type that the receptor Process method receives.\r\n        /// &lt;/summary&gt;\r\n        public string ReceptorType { get; set; }\r\n\r\n        /// &lt;summary&gt;\r\n        /// The types that the receptor Process method publishes.\r\n        /// &lt;/summary&gt;\r\n        public List&lt;string&gt; Publishes { get; set; }\r\n        \r\n        public ReceptorDescription()\r\n        {\r\n        \tPublishes = new List&lt;string&gt;();\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_USPSAddressResponse" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="ccaa4783-d034-4a8c-84cb-2d18f73b21ad" Visible="true" Text="ST_USPSAddressError" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>57</X>
        <Y>-144</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>57</X>
      <Y>-144</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n    public class ST_USPSAddressError : ISemanticType\r\n    {\r\n\t\tpublic int Number {get;set;}\r\n\t\tpublic string Source {get;set;}\r\n\t\tpublic string Description {get;set;}\r\n\t\tpublic string HelpFile {get;set;}\r\n\t\tpublic string HelpContext {get;set;}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_HttpGet" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="55afb909-e2ac-4c30-8787-116fb6440707" Visible="true" Text="ST_ShowSemanticType" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>57</X>
        <Y>-99</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>57</X>
      <Y>-99</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n    public class ST_ShowSemanticType : ISemanticType\r\n    {\r\n    \tpublic ISemanticType Type {get; set;}\r\n    }\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="126cd1cc-3ef5-4cef-be42-83a98b3bf097" Visible="true" Text="Show&#xD;&#xA;Semantic&#xD;&#xA;Type" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>262</X>
        <Y>323</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>262</X>
      <Y>323</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"ShowSemanticType","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="71f5cf25-1ec8-46c3-8294-043e63c801d9" Visible="true" Text="Show&#xD;&#xA;Semantic&#xD;&#xA;Type" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-499</X>
        <Y>29</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>-499</X>
      <Y>29</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ShowSemanticType : IReceptor\r\n\t{\r\n\t\tprotected Form form;\r\n\t\tprotected PropertyGrid pg;\r\n\t\t\r\n\t\tpublic ShowSemanticType()\r\n\t\t{\r\n\t\t\tform = new Form();\r\n\t\t\tform.Location = new Point(0, 0);\r\n\t\t\tform.Size = new Size(200, 300);\r\n\t\t\tform.Text = \"Semantic Type Viewer\";\r\n\t\t\tpg = new PropertyGrid();\r\n\t\t\tpg.Dock = DockStyle.Fill;\r\n\t\t\tform.Controls.Add(pg);\r\n\t\t\tform.Show();\r\n\t\t}\r\n\t\t\r\n\t\t// Use ISemanticType to see all types being published!\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_ShowSemanticType st)\r\n\t\t{\r\n\t\t\tform.BeginInvoke(()=&gt;\r\n\t\t\t{\r\n\t\t\t\tpg.SelectedObject = st.Type;\r\n\t\t\t\tApplication.DoEvents();\r\n\t\t\t});\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="USPSValidationResponse" ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="c804471f-4d32-436a-84aa-02a31c544fa3" Visible="true" Text="USPS&#xD;&#xA;Validation&#xD;&#xA;Response" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>354</X>
        <Y>263</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>354</X>
      <Y>263</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"USPSValidationResponse","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="" ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="e1d6a77b-c625-400e-83e4-8dce574e7a7f" Visible="true" Text="USPS&#xD;&#xA;Validation&#xD;&#xA;Response" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-373</X>
        <Y>46</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>-373</X>
      <Y>46</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Windows.Forms;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class USPSValidationResponse : IReceptor\r\n\t{\r\n\t\t[Publishes(typeof(ST_ShowSemanticType))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_USPSAddressResponse resp)\r\n\t\t{\r\n\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, new ST_ShowSemanticType() {Type = resp});\t\t\r\n\t\t}\r\n\t\t\r\n\t\t[Publishes(typeof(ST_ShowSemanticType))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_USPSAddressError resp)\r\n\t\t{\r\n\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, new ST_ShowSemanticType() {Type = resp});\t\t\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="USPSValidationRequest" ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="d586af12-f4bb-4f70-bc56-8f37be5dbff1" Visible="true" Text="USPS&#xD;&#xA;Validation&#xD;&#xA;Request" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>421</X>
        <Y>182</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>421</X>
      <Y>182</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"USPSValidationRequest","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="b78f67dc-5d71-4899-8b46-8ceed30752c6" Visible="true" Text="AddressValidateResponse.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-238</X>
        <Y>-264</Y>
      </Location>
      <Size>
        <Width>242</Width>
        <Height>25</Height>
      </Size>
      <X>-238</X>
      <Y>-264</Y>
      <Width>242</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>AddressValidateResponse.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Xml;\r\nusing System.Xml.Serialization;\r\n\r\nnamespace App\r\n{\r\n    public class AddressValidateResponse\r\n    {\r\n\t\tpublic ST_USPSAddressResponse Address { get; set; }    \r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="" ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="38c04544-86c8-4873-8453-5332cca04074" Visible="true" Text="USPS&#xD;&#xA;Validation&#xD;&#xA;Request" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-291</X>
        <Y>-49</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>-291</X>
      <Y>-49</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.IO;\r\nusing System.Text;\r\nusing System.Xml;\r\nusing System.Xml.Serialization;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class USPSValidationRequest : IReceptor\r\n\t{\r\n\t\t[Publishes(typeof(ST_USPSAddressError))]\r\n\t\t[Publishes(typeof(ST_USPSAddressResponse))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_ValidateAddressXml xml)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t            string ret = Http.Get(\"https://secure.shippingapis.com/ShippingAPI.dll?API=Verify&amp;XML=\" + xml.Xml);\r\n\t\r\n\t\t\t\t// For debugging, show ST.\r\n\t            // proc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, new ST_Text() {Text = ret});\r\n\t            \r\n\t            XmlSerializer xs = new XmlSerializer(typeof(AddressValidateResponse));\r\n\t            StringReader sr = new StringReader(ret);\r\n\t            AddressValidateResponse resp = (AddressValidateResponse)xs.Deserialize(sr);\r\n\t            \r\n\t            if (resp.Address.Error != null)\r\n\t            {\r\n\t\t\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, resp.Address.Error);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// USPS reverses the two address lines.\r\n\t\t\t\t\tstring a1 = resp.Address.Address1;\r\n\t\t\t\t\tstring a2 = resp.Address.Address2;\r\n\t\t\t\t\tresp.Address.Address2 = a1;\r\n\t\t\t\t\tresp.Address.Address1 = a2;\r\n\t\t\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, resp.Address);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch(Exception ex)\r\n\t\t\t{\r\n\t\t\t\tSystem.Windows.Forms.MessageBox.Show(ex.Message, \"Error\");\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="XmlSerialization" ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="310a01a6-8db1-45c9-8aa8-5224f87af9ac" Visible="true" Text="Avr&#xD;&#xA;Serialization" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>382</X>
        <Y>85</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>382</X>
      <Y>85</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"AvrSerialization","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="6343a722-b8c5-49f0-be0e-deb3f9ccb519" Visible="true" Text="AddressValidationRequest.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-239</X>
        <Y>-300</Y>
      </Location>
      <Size>
        <Width>221</Width>
        <Height>25</Height>
      </Size>
      <X>-239</X>
      <Y>-300</Y>
      <Width>221</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>AddressValidationRequest.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Xml;\r\nusing System.Xml.Serialization;\r\n\r\nnamespace App\r\n{\r\n    public class AddressValidateRequest\r\n    {\r\n        [XmlAttribute] public string USERID { get; set; }\r\n        public int Revision { get; set; }\r\n        public Address Address { get; set; }\r\n\r\n        public AddressValidateRequest()\r\n        {\r\n            USERID = \"457INTER2602\";\r\n            Revision = 1;\r\n            Address = new Address();\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="d33b633c-270b-44da-8700-af7d504bb053" Visible="true" Text="Address.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-240</X>
        <Y>-331</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>-240</X>
      <Y>-331</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>Address.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Xml;\r\nusing System.Xml.Serialization;\r\n\r\nnamespace App\r\n{\r\n    public class Address\r\n    {\r\n        [XmlAttribute] public int ID { get; set; }\r\n        public string FirmName { get; set; }\r\n        public string Address1 { get; set; }\r\n        public string Address2 { get; set; }\r\n        public string City { get; set; }\r\n        public string State { get; set; }\r\n        public string Urbanization { get; set; }\r\n        public string Zip5 { get; set; }\r\n        public string Zip4 { get; set; }\r\n\r\n        public Address()\r\n        {\r\n            ID = 0;         // Only 1 address\r\n            // These elements must be serialized even if not populated.\r\n            Address1 = \"\";\r\n            Zip4 = \"\";\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="" ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="0cc20e19-6b24-4737-abb2-ea1f3a47fc58" Visible="true" Text="Avr&#xD;&#xA;Serialization" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-335</X>
        <Y>-166</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>-335</X>
      <Y>-166</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.IO;\r\nusing System.Text;\r\nusing System.Xml;\r\nusing System.Xml.Serialization;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class AvrSerialization : IReceptor\r\n\t{\r\n\t\t[Publishes(typeof(ST_ValidateAddressXml))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_USPSAddressValidateRequest avr)\r\n\t\t{\r\n            XmlWriterSettings xws = new XmlWriterSettings();\r\n            xws.OmitXmlDeclaration = true;\r\n            XmlSerializerNamespaces ns = new XmlSerializerNamespaces();\r\n            ns.Add(\"\", \"\");\r\n            XmlSerializer xs = new XmlSerializer(avr.Request.GetType());\r\n            StringBuilder sb = new StringBuilder();\r\n            TextWriter tw = new StringWriter(sb);\r\n            XmlWriter xtw = XmlWriter.Create(tw, xws);\r\n            xs.Serialize(xtw, avr.Request, ns);\r\n            string xml = sb.ToString();\r\n            \r\n\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, new ST_ValidateAddressXml() {Xml = xml});            \r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_USPSAddressResponse" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="1c45da84-22a7-48ea-bedd-b5b1ab35bda6" Visible="true" Text="ST_USPSAddressResponse" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>56</X>
        <Y>-187</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>56</X>
      <Y>-187</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n    public class ST_USPSAddressResponse : ISemanticType\r\n    {\r\n        public int ID { get; set; }\r\n        public string FirmName { get; set; }\r\n        public string Address1 { get; set; }\r\n        public string Address2 { get; set; }\r\n        public string City { get; set; }\r\n        public string State { get; set; }\r\n        public string Urbanization { get; set; }\r\n        public string Zip5 { get; set; }\r\n        public string Zip4 { get; set; }\r\n        public string DeliveryPoint { get; set; }\r\n        public string CarrierRoute { get; set; }\r\n        public string DPVConfirmation { get; set; }\r\n        public string DPVCMRA { get; set; }\r\n        public string DPVFootnotes { get; set; }\r\n        public string Business { get; set; }\r\n        public string CentralDeliveryPoint { get; set; }\r\n        public string Vacant { get; set; }\r\n\t\tpublic ST_USPSAddressError Error { get; set; }        \r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_Xml" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="92b784a4-cbb7-45e8-89ed-f5308113d200" Visible="true" Text="ST_ValidateAddressXml" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>54</X>
        <Y>-227</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>54</X>
      <Y>-227</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n    public class ST_ValidateAddressXml : ISemanticType\r\n    {\r\n        public string Xml { get; set; }\r\n    }\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="6b7b71d6-ed56-4f3f-a072-895b7942873b" Visible="true" Text="ST_USPSAddressValidateRequest" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>53</X>
        <Y>-265</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>53</X>
      <Y>-265</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n    public class ST_USPSAddressValidateRequest : ISemanticType\r\n    {\r\n        public AddressValidateRequest Request {get; set;}\r\n    }\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="706e3d1e-9072-4677-904f-2f898aec4215" Visible="true" Text="USPS&#xD;&#xA;Address&#xD;&#xA;Verifier" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>277</X>
        <Y>51</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>277</X>
      <Y>51</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"USPSAddressVerifier","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="04212891-d70b-4479-9a3f-625d8412fdff" Visible="true" Text="ShowText" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>565</X>
        <Y>101</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>565</X>
      <Y>101</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"ShowText","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="7cca1f87-dc15-40ee-be16-6be7a47f4a79" Visible="true" Text="ST_Text" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-133</X>
        <Y>194</Y>
      </Location>
      <Size>
        <Width>100</Width>
        <Height>32</Height>
      </Size>
      <X>-133</X>
      <Y>194</Y>
      <Width>100</Width>
      <Height>32</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\t[Serializable]\r\n\tpublic class ST_Text : MarshalByRefObject, ISemanticType \r\n\t{\r\n\t\tpublic string Text {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="a8c36c76-d035-4ed9-8e5e-8f687a48a096" Visible="true" Text="ShowText" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-431</X>
        <Y>-57</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>-431</X>
      <Y>-57</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Windows.Forms;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ShowText : IReceptor\r\n\t{\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_Text text)\r\n\t\t{\r\n\t\t\tMessageBox.Show(text.Text, \"Output\", MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n\t\t}\r\n\t\t\r\n\t\t// public void Process(ISemanticProcessor proc, IMembrane membrane, ST_Xml xml)\r\n\t\t// {\r\n\t\t//\tMessageBox.Show(xml.Xml, \"Output\", MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n\t\t// }\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="e92203c7-c91e-4ee6-aabe-66cf353a4b71" Visible="true" Text="PropertyContainer.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>255</X>
        <Y>-373</Y>
      </Location>
      <Size>
        <Width>161</Width>
        <Height>25</Height>
      </Size>
      <X>255</X>
      <Y>-373</Y>
      <Width>161</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>RouteHandlers.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System.Collections.Generic;\r\n\r\nnamespace App\r\n{\r\n    public class PropertyContainer\r\n    {\r\n        public List&lt;PropertyData&gt; Types { get; set; }\r\n\r\n        public PropertyContainer()\r\n        {\r\n            Types = new List&lt;PropertyData&gt;();\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="6edbfb06-4c61-4dc6-aed7-9d73830d5524" Visible="true" Text="PropertyData.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>286</X>
        <Y>-333</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>286</X>
      <Y>-333</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>RouteHandlers.cs</ExtraData>
    <Json>{"csharp":"","Code":"namespace App\r\n{\r\n    public class PropertyData\r\n    {\r\n        public string Category { get; set; }\r\n        public string Description { get; set; }\r\n        public string Name { get; set; }\r\n        public string TypeName { get; set; }\r\n        public string Value { get; set; }\r\n        public PropertyContainer ChildType { get; set; }\r\n\r\n        public PropertyData()\r\n        {\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="d69a7e2b-b413-4223-b332-eb41634cdd60" Visible="true" Text="RouteHandlers.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>453</X>
        <Y>-327</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>453</X>
      <Y>-327</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>RouteHandlers.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel;\r\nusing System.Diagnostics;\r\nusing System.Linq;\r\nusing System.Net;\r\nusing System.Reflection;\r\n\r\nusing Newtonsoft.Json;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\nusing Clifton.Core.Semantics;\r\nusing Clifton.Core.Services.SemanticProcessorService;\r\n\r\nnamespace App\r\n{\r\n\tpublic class RouteHandlers : BaseRouteHandlers\r\n\t{\r\n\t\tprotected const string INSTANTIATE_RECEPTOR = \"instantiateReceptor\";\r\n\t\tprotected const string DESCRIBE_RECEPTOR = \"describeReceptor\";\r\n\t\tprotected const string DESCRIBE_SEMANTIC_TYPE = \"describeSemanticType\";\r\n\t\tprotected const string INSTANTIATE_SEMANTIC_TYPE = \"instantiateSemanticType\";\r\n\t\tprotected const string PUBLISH_SEMANTIC_TYPE = \"publishSemanticType\";\r\n\t\tprotected const string ENABLE_DISABLE_RECEPTOR = \"enableDisableReceptor\";\r\n        protected const string CLOSE = \"close\";\r\n\r\n\t\tprotected SemanticProcessor sp;\r\n\t\tprotected string assyName;\r\n\t\t\r\n\t\t// TODO: Membrane needs to be added to the type name as well.\r\n\t\tprotected Dictionary&lt;string, IReceptor&gt; receptors = new Dictionary&lt;string, IReceptor&gt;();\r\n\r\n\t\tpublic RouteHandlers(SemanticProcessor sp)\r\n\t\t{\r\n\t\t\troutes = new Dictionary&lt;string, Func&lt;HttpListenerContext, string, HandlerResponse&gt;&gt;()\r\n\t\t\t{\r\n\t\t\t\t{INSTANTIATE_RECEPTOR, InstantiateReceptor},\r\n\t\t\t\t{DESCRIBE_RECEPTOR, DescribeReceptor },\r\n\t\t\t\t{DESCRIBE_SEMANTIC_TYPE, DescribeSemanticType },\r\n\t\t\t\t{INSTANTIATE_SEMANTIC_TYPE, InstantiateSemanticType },\r\n\t\t\t\t{PUBLISH_SEMANTIC_TYPE, PublishSemanticType },\r\n\t\t\t\t{ENABLE_DISABLE_RECEPTOR, EnableDisableReceptor },\r\n\t\t\t\t{CLOSE, Close },\r\n\t\t\t};\r\n\r\n\t\t\tthis.sp = sp;\r\n\t\t\tassyName = Process.GetCurrentProcess().ProcessName;\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse InstantiateReceptor(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\tstring typeName = data.RightOf('=');\r\n\t\t\tInstantiateReceptor(typeName);\r\n\t\t\t\r\n\t\t\treturn new HandlerResponse(\"OK\", \"text/text\");\r\n\t\t}\r\n\t\t\r\n\t\tprotected HandlerResponse DescribeReceptor(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\tstring typeName = data.RightOf('=');\r\n\t\t\tReceptorDescription descr = new ReceptorDescription();\r\n\t\t\tIReceptor receptor;\r\n\r\n\t\t\tif (receptors.TryGetValue(typeName, out receptor))\r\n\t\t\t{\r\n\t\t\t\tvar mi = receptor.GetType().GetMethods(BindingFlags.Public | BindingFlags.Instance).\r\n\t\t\t\t\tWhere(m=&gt;m.Name == \"Process\" &amp;&amp; m.GetParameters()[2].ParameterType.Name == typeName);\r\n\t\t\t\t\t\r\n\t\t\t\tif (mi.Count() &gt; 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (mi.Count() == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdescr.ReceptorType = typeName;\r\n\t\t\t\t\t\tvar attrs = mi.First().GetCustomAttributes().Where(attr=&gt;attr is PublishesAttribute).Cast&lt;PublishesAttribute&gt;();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tforeach(var attr in attrs)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdescr.Publishes.Add(attr.PublishesType.Name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Multiple Process methods that receive the same semantic type are not supported\r\n\t\t\t\t\t\t// in the same receptor class.\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tstring json = JsonConvert.SerializeObject(descr);\r\n\t\t\t\r\n\t\t\treturn new HandlerResponse(json, \"text/json\");\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse DescribeSemanticType(HttpListenerContext context, string data)\r\n\t\t{\r\n            try\r\n            {\r\n\t\t\t\tType t = Type.GetType(\"App.\" + data.RightOf('=') + \", \" + assyName);\r\n\t\t\t\t\r\n\t\t\t\t// Instantiate the object so we can get any default values.\r\n\t\t\t\tobject obj = Activator.CreateInstance(t);\r\n\t\t\t\t\r\n            \tPropertyInfo[] pis = t.GetProperties(BindingFlags.Public | BindingFlags.Instance);\r\n            \tPropertyContainer pc = new PropertyContainer();\r\n                BuildTypes(obj, pc, pis);\r\n\t            string json = JsonConvert.SerializeObject(pc);\r\n\r\n\t\t\t\treturn new HandlerResponse(json, \"text/json\");\r\n\t\t\t}\r\n\t\t\tcatch(Exception ex)\r\n\t\t\t{\r\n\t            Program.Log(ex.Message+\"\\r\\n\"+ex.StackTrace);\r\n\t\t\t\treturn new HandlerResponse(\"Error: \" + ex.Message, \"text/text\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse InstantiateSemanticType(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\tType t = Type.GetType(\"App.\" + data.RightOf('=') + \", \" + assyName);\r\n\t\t\tISemanticType st = (ISemanticType)Activator.CreateInstance(t);\r\n\t\t\tstring json = JsonConvert.SerializeObject(st);\r\n\r\n\t\t\treturn new HandlerResponse(json, \"text/json\");\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse PublishSemanticType(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\t// TODO: Fix assumptions about ordering of params\r\n\t\t\tstring[] parms = data.Split('&amp;');\r\n\t\t\tType t = Type.GetType(\"App.\" + parms[0].RightOf('=') + \", \" + assyName);\r\n\t\t\tISemanticType st = (ISemanticType)JsonConvert.DeserializeObject(parms[1].RightOf('='), t);\r\n\t\t\tsp.ProcessInstance&lt;App.HopeMembrane&gt;(st);\r\n\r\n\t\t\treturn new HandlerResponse(\"OK\", \"text/text\");\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse EnableDisableReceptor(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\t// TODO: Fix assumptions about ordering of params\r\n\t\t\tstring[] parms = data.Split('&amp;');\r\n\t\t\tstring typeName = \"App.\" + parms[0].RightOf('=');\r\n\r\n\t\t\tif (parms[1].RightOf('=').to_b())\r\n\t\t\t{\r\n\t\t\t\t// enable\r\n\t\t\t\tif (!receptors.ContainsKey(typeName))\r\n\t\t\t\t{\r\n\t\t\t\t\tInstantiateReceptor(typeName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// disable\r\n\t\t\t\tIReceptor receptor;\r\n\r\n\t\t\t\tif (receptors.TryGetValue(typeName, out receptor))\r\n\t\t\t\t{\r\n\t\t\t\t\tsp.Unregister&lt;App.HopeMembrane&gt;(receptor);\r\n\t\t\t\t\treceptors.Remove(typeName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn new HandlerResponse(\"OK\", \"text/text\");\r\n\t\t}\r\n\t\t\r\n\t\tprotected HandlerResponse Close(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\tProgram.Close();\r\n\t\t\t\r\n\t\t\treturn new HandlerResponse(\"OK\", \"text/text\");\r\n\t\t}\r\n\r\n\t\tprotected void InstantiateReceptor(string typeName)\r\n\t\t{\r\n\t\t\tProgram.form.Invoke(() =&gt;\r\n\t\t\t{\r\n\t\t\t\tType t = Type.GetType(typeName + \", \" + assyName);\r\n\t\t\t\tIReceptor receptor = (IReceptor)Activator.CreateInstance(t);\r\n\t\t\t\tsp.Register&lt;App.HopeMembrane&gt;(receptor);\r\n\t\t\t\treceptors[typeName] = receptor;\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n        protected void BuildTypes(object obj, PropertyContainer pc, PropertyInfo[] pis)\r\n        {\r\n            foreach (PropertyInfo pi in pis)\r\n            {\r\n                PropertyData pd = new PropertyData() { Name = pi.Name, TypeName = pi.PropertyType.FullName };\r\n\r\n\t\t\t\tif (obj != null)\r\n\t\t\t\t{\r\n\t                if ((pi.PropertyType.IsValueType) || (pd.TypeName == \"System.String\"))\r\n\t                {\r\n\t\t\t\t\t\t// We want to give the host any default values created in the constructor.\r\n\t\t\t\t\t\tobject val = pi.GetValue(obj);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (val != null)\r\n\t\t\t\t\t\t{\r\n\t\t               \t\tpd.Value = val.ToString();\r\n\t\t               \t}\r\n\t               \t}\r\n               \t}\r\n                \r\n                var cat = pi.GetCustomAttribute&lt;CategoryAttribute&gt;();\r\n                var desc = pi.GetCustomAttribute&lt;DescriptionAttribute&gt;();\r\n                pd.Category = cat == null ? null : cat.Category;\r\n                pd.Description = desc == null ? null : desc.Description;\r\n                pc.Types.Add(pd);\r\n\r\n                if ((!pi.PropertyType.IsValueType) &amp;&amp; (pd.TypeName != \"System.String\"))\r\n                {\r\n                    PropertyInfo[] pisChild = pi.PropertyType.GetProperties(BindingFlags.Public | BindingFlags.Instance);\r\n                    pd.ChildType = new PropertyContainer();\r\n\t\t\t\t\tobject val = pi.GetValue(obj);\r\n                    BuildTypes(val, pd.ChildType, pisChild);\r\n                }\r\n            }\r\n        }\r\n\t}\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_Zip4" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="d62eb8ed-f938-45c2-9dde-26a4465e4b8d" Visible="true" Text="ST_Zip4" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-94</X>
        <Y>160</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>-94</X>
      <Y>160</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Zip4 : ISemanticType \r\n\t{\r\n\t\tpublic string Zip4 {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_Zip5" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="5c5d02e4-4c27-466d-9ec1-3d3953c3002d" Visible="true" Text="ST_Zip5" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-94</X>
        <Y>124</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>-94</X>
      <Y>124</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Zip5 : ISemanticType \r\n\t{\r\n\t\tpublic string Zip5 {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_Zip" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="279b0773-deec-4a3e-b80c-6c8032386717" Visible="true" Text="ST_Zip" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-94</X>
        <Y>81</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>-94</X>
      <Y>81</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Zip : ISemanticType \r\n\t{\r\n\t\tpublic ST_Zip5 Zip5 {get; set;}\r\n\t\tpublic ST_Zip4 Zip4 {get; set;}\r\n\t\t\r\n\t\tpublic ST_Zip()\r\n\t\t{\r\n\t\t\tZip5 = new ST_Zip5();\r\n\t\t\tZip4 = new ST_Zip4();\r\n\t\t}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_State" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="38fb81c2-fae7-4e3b-ab84-2d0faf104b76" Visible="true" Text="ST_State" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-94</X>
        <Y>46</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>-94</X>
      <Y>46</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_State : ISemanticType \r\n\t{\r\n\t\tpublic string State {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_City" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="c936d7be-f2c3-401a-a2b1-6f2622d5c164" Visible="true" Text="ST_City" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-94</X>
        <Y>10</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>-94</X>
      <Y>10</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_City : ISemanticType \r\n\t{\r\n\t\tpublic string City {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_Address" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="9376c20a-a435-4fce-aaf7-1f49273723fb" Visible="true" Text="ST_Address" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-94</X>
        <Y>-25</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>-94</X>
      <Y>-25</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Address : ISemanticType \r\n\t{\r\n\t\tpublic string Address1 {get; set;}\r\n\t\tpublic string Address2 {get; set;}\r\n\t\tpublic ST_City City {get; set;}\r\n\t\tpublic ST_State State {get; set;}\r\n\t\tpublic ST_Zip Zip {get; set;}\r\n\t\t\r\n\t\tpublic ST_Address()\r\n\t\t{\r\n\t\t\tCity = new ST_City();\r\n\t\t\tState = new ST_State();\r\n\t\t\tZip = new ST_Zip();\r\n\t\t\t\r\n\t\t\tAddress1 = \"565 Roxbury Rd\";\r\n\t\t\tCity.City = \"Hudson\";\r\n\t\t\tState.State = \"NY\";\r\n\t\t\tZip.Zip5.Zip5 = \"12534\";\r\n\t\t}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="USPSAddressVerifier" ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="fee74055-ab1a-42fd-a9ae-c8440bc9d959" Visible="true" Text="USPS&#xD;&#xA;Address&#xD;&#xA;Verifier" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-139</X>
        <Y>-172</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>-139</X>
      <Y>-172</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Windows.Forms;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class USPSAddressVerifier : IReceptor\r\n\t{\r\n\t\t[Publishes(typeof(ST_USPSAddressValidateRequest))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_Address addr)\r\n\t\t{\r\n\t\t\tAddressValidateRequest avr = new AddressValidateRequest();\r\n\t\t\t// USPS reverses the two address lines.\r\n\t\t\t\r\n\t\t\tif (addr.Address2 == null)\r\n\t\t\t{\r\n\t\t\t\t// Address2, if not provided, must be an empty string, not null! \r\n\t\t\t\taddr.Address2 = String.Empty;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tavr.Address.Address1 = addr.Address2;\r\n\t\t\tavr.Address.Address2 = addr.Address1;\r\n\t\t\tavr.Address.City = addr.City.City;\r\n\t\t\tavr.Address.State = addr.State.State;\r\n\t\t\tavr.Address.Zip5 = addr.Zip.Zip5.Zip5;\r\n\t\t\t\r\n\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, new ST_USPSAddressValidateRequest() {Request = avr});\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="787a75df-2352-49b0-be65-ceea476b8968" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>699</X>
        <Y>-94</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>699</X>
      <Y>-94</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"System.Windows.Forms.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="09450796-5ed4-49c9-b441-9f17af2d4ecb" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>699</X>
        <Y>-135</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>699</X>
      <Y>-135</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"System.Speech.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="92055a5e-fea4-4443-b2a2-abf5c129e3d2" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>413</X>
        <Y>-136</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>413</X>
      <Y>-136</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"Newtonsoft.Json.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="e5daf2a6-3b53-4942-b616-5379b2fa4a7a" Visible="true" Text="WebServer.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>656</X>
        <Y>-311</Y>
      </Location>
      <Size>
        <Width>170</Width>
        <Height>29</Height>
      </Size>
      <X>656</X>
      <Y>-311</Y>
      <Width>170</Width>
      <Height>29</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>WebServer.cs</ExtraData>
    <Json>{"csharp":"","Code":"/* \r\n* Copyright (c) Marc Clifton\r\n* The Code Project Open License (CPOL) 1.02\r\n* http://www.codeproject.com/info/cpol10.aspx\r\n*/\r\n\r\nusing System;\r\nusing System.IO;\r\nusing System.Net;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\n\r\nnamespace App\r\n{\r\n\tpublic class HandlerResponse\r\n\t{\r\n\t\tpublic string Text {get;set;}\r\n\t\tpublic string Mime {get;set;}\r\n\t\t\r\n\t\tpublic HandlerResponse(string text, string mime)\r\n\t\t{\r\n\t\t\tText=text;\r\n\t\t\tMime=mime;\r\n\t\t}\r\n\t}\r\n\t\r\n    public class WebServer\r\n    {\r\n        protected HttpListener listener;\r\n\t\tprotected BaseRouteHandlers routeHandlers;\r\n\r\n        public WebServer(BaseRouteHandlers routeHandlers)\r\n        {\r\n\t\t\tthis.routeHandlers = routeHandlers;\r\n        }\r\n\r\n        public void Start(string ip, int[] ports)\r\n        {\r\n            listener = new HttpListener();\r\n\r\n            foreach (int port in ports)\r\n            {\r\n                string url = IpWithPort(ip, port);\r\n                listener.Prefixes.Add(url);\r\n            }\r\n\r\n            listener.Start();\r\n            Task.Run(() =&gt; WaitForConnection(listener));\r\n        }\r\n\r\n        protected void WaitForConnection(object objListener)\r\n        {\r\n            HttpListener listener = (HttpListener)objListener;\r\n\r\n            while (true)\r\n            {\r\n                // Wait for a connection.  Return to caller while we wait.\r\n                HttpListenerContext context = listener.GetContext();\r\n\r\n                // Redirect to HTTPS if not local and not secure.\r\n                if (!context.Request.IsLocal &amp;&amp; !context.Request.IsSecureConnection)\r\n                {\r\n                    string redirectUrl = context.Request.Url.ToString().Replace(\"http:\", \"https:\");\r\n                    context.Response.Redirect(redirectUrl);\r\n                    context.Response.Close();\r\n                }\r\n                else\r\n                {\r\n                    string data = new StreamReader(context.Request.InputStream, context.Request.ContentEncoding).ReadToEnd();\r\n                    ProcessRoute(context, data);\r\n                }\r\n            }\r\n        }\r\n\r\n        protected void ProcessRoute(HttpListenerContext context, string data)\r\n        {\r\n        \tApp.Program.Log(context.Request.Url.ToString());\r\n            //Program.form.Invoke(() =&gt;\r\n            //{\r\n            //    Program.tbLog.AppendText(context.Request.Url.ToString() + \"\\n\");\r\n            //    Program.tbLog.AppendText(data + \"\\n\");\r\n            //});\r\n\r\n            string route = context.Request.Url.ToString().RightOfRightmostOf('/').LeftOf('?');\r\n            string parms = context.Request.Url.ToString().RightOf('?');\r\n            Func&lt;HttpListenerContext, string, HandlerResponse&gt; handler;\r\n\r\n            if (routeHandlers.Routes.TryGetValue(route, out handler))\r\n            {\r\n                try\r\n                {\r\n                    var resp = handler(context, parms);\r\n\t\t\t\t\tResponse(context, resp.Text, resp.Mime);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                \tApp.Program.Log(ex.Message);\r\n                    //Program.form.BeginInvoke(() =&gt;\r\n                    //{\r\n                    //    Program.tbLog.AppendText(ex.Message + \"\\n\");\r\n                    //    Program.tbLog.AppendText(ex.StackTrace + \"\\n\");\r\n                    //});\r\n                }\r\n            }\r\n\r\n            context.Response.Close();\r\n        }\r\n\r\n\r\n        protected void Response(HttpListenerContext context, string resp, string contentType)\r\n        {\r\n            byte[] utf8data = Encoding.UTF8.GetBytes(resp);\r\n            context.Response.ContentType = contentType;\r\n            context.Response.ContentEncoding = Encoding.UTF8;\r\n            context.Response.ContentLength64 = utf8data.Length;\r\n            context.Response.OutputStream.Write(utf8data, 0, utf8data.Length);\r\n        }\r\n\r\n        protected string IpWithPort(string ip, int port)\r\n        {\r\n            string ret;\r\n\r\n            if (port == 80)\r\n            {\r\n                ret = \"http://\" + ip + \"/\";\r\n            }\r\n            else if ((ip == \"localhost\") || (ip == \"127.0.0.1\"))\r\n            {\r\n                ret = \"http://\" + ip + \":\" + port.ToString() + \"/\";\r\n            }\r\n            else\r\n            {\r\n                ret = \"https://\" + ip + \":\" + port.ToString() + \"/\";\r\n            }\r\n\r\n            return ret;\r\n        }\r\n    }\r\n}","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="b234777d-381e-4eee-80ec-0f0d85fe7fe4" Visible="true" Text="BaseRouteHandlers.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>654</X>
        <Y>-354</Y>
      </Location>
      <Size>
        <Width>169</Width>
        <Height>28</Height>
      </Size>
      <X>654</X>
      <Y>-354</Y>
      <Width>169</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>BaseRouteHandlers.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Net;\r\n\r\nnamespace App\r\n{\r\n\tpublic abstract class BaseRouteHandlers\r\n\t{\r\n\t\tpublic Dictionary&lt;string, Func&lt;HttpListenerContext, string, HandlerResponse&gt;&gt; Routes { get { return routes; } }\r\n\t\tprotected Dictionary&lt;string, Func&lt;HttpListenerContext, string, HandlerResponse&gt;&gt; routes;\r\n\t}\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="7f1d7d23-3c2a-49d5-a317-78a241b92d6e" Visible="true" Text="HttpGet.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>453</X>
        <Y>-289</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>453</X>
      <Y>-289</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>HttpGet.cs</ExtraData>
    <Json>{"csharp":"","Code":"/* \r\n* Copyright (c) Marc Clifton\r\n* The Code Project Open License (CPOL) 1.02\r\n* http://www.codeproject.com/info/cpol10.aspx\r\n*/\r\n\r\nusing System.Net;\r\nusing System.IO;\r\n\r\nnamespace App\r\n{\r\n    public static class Http\r\n    {\r\n        public static string Get(string uri)\r\n        {\r\n            WebClient client = new WebClient();\r\n\r\n            // Add a user agent header in case the \r\n            // requested URI contains a query.\r\n\r\n            client.Headers.Add(\"user-agent\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR 1.0.3705;)\");\r\n\r\n            Stream data = client.OpenRead(uri);\r\n            StreamReader reader = new StreamReader(data);\r\n            string s = reader.ReadToEnd();\r\n            data.Close();\r\n            reader.Close();\r\n\r\n            return s;\r\n        }\r\n    }\r\n}","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="07196917-e398-4dbc-ad51-5e7f15e99911" Visible="true" Text="PythonLauncher.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>453</X>
        <Y>-229</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>453</X>
      <Y>-229</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>PythonLauncher.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Windows.Forms;\r\n\r\nnamespace App\r\n{\r\n\tpublic static class PythonLauncher\r\n\t{\r\n        public static Process LaunchProcess(string arguments, Action&lt;string&gt; onOutput, Action&lt;string&gt; onError = null)\r\n        {\r\n        \tstring processName = \"python\";\r\n            Process p = new Process();\r\n            p.StartInfo.UseShellExecute = false;\r\n            p.StartInfo.RedirectStandardOutput = true;\r\n            p.StartInfo.RedirectStandardError = true;\r\n            p.StartInfo.RedirectStandardInput = true;\r\n            p.StartInfo.FileName = processName;\r\n            p.StartInfo.Arguments = arguments;\r\n            p.StartInfo.CreateNoWindow = true;\r\n\r\n            p.OutputDataReceived += (sndr, args) =&gt; { if (args.Data != null) onOutput(args.Data); };\r\n\r\n            if (onError != null)\r\n            {\r\n                p.ErrorDataReceived += (sndr, args) =&gt; { if (args.Data != null) onError(args.Data); };\r\n            }\r\n\r\n            p.Start();\r\n\r\n            // Interestingly, this has to be called after Start().\r\n            p.BeginOutputReadLine();\r\n            p.BeginErrorReadLine();\r\n\r\n            return p;\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.PythonFileBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="57c0cd10-edc3-45c4-b5e3-ef3c8935e761" Visible="true" Text="personOfInterest.py" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>634</X>
        <Y>-229</Y>
      </Location>
      <Size>
        <Width>158</Width>
        <Height>30</Height>
      </Size>
      <X>634</X>
      <Y>-229</Y>
      <Width>158</Width>
      <Height>30</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>personOfInterest.py</ExtraData>
    <Json>{"python":"#pylint: disable=C0111, C0301, C0303, W0311, W0614, W0401, W0232, W0702, W0703, W0201\r\n# Make sure pip and setup tools are up to date:\r\n# python -m pip install -U pip\r\n# pip install -U setuptools\r\n# pip install requests\r\n# pip install lxml\r\n# pip install cssselect\nimport requests\r\nimport sys\r\nfrom lxml import html\r\nfrom lxml.cssselect import CSSSelector\r\nfrom lxml import etree\r\n \r\nurl = \"http://www.onthisday.com/birthdays/\" + sys.argv[1] + \"/\" + sys.argv[2]\r\n# print(\"URL: \" + url)\r\npage = requests.get(url)\r\ntree = html.fromstring(page.content)\r\nsel = CSSSelector('.section--person-of-interest')\r\npois = sel(tree)\r\n \r\nfor poi in pois:\r\n print(poi.xpath(\"div/div/div[1]/p\")[0].text_content().encode('cp437', errors='replace'))\r\n \r\n ","TextChanged":"True","GenerateClass":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="74f3b914-e788-414b-bc98-49e1438cc528" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>414</X>
        <Y>-94</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>414</X>
      <Y>-94</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"Clifton.Core.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="d05423eb-1a7a-4057-9986-2069c15c55d1" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>413</X>
        <Y>-51</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>413</X>
      <Y>-51</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"Clifton.SemanticProcessorService.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="dac62759-5533-4e9c-ba11-7eb471a88b4b" Visible="true" Text="Program.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>452</X>
        <Y>-359</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>452</X>
      <Y>-359</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>Program.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\n\r\nusing Newtonsoft.Json;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\nusing Clifton.Core.Semantics;\r\nusing Clifton.Core.Services.SemanticProcessorService;\r\n\r\nnamespace App\r\n{\r\n\tpublic class HopeMembrane : Membrane { }\r\n\t\r\n    /// &lt;summary&gt;\r\n    /// For testing the FlowSharpHopeService.StandAloneRunner.\r\n    /// Note that this project references a DLL built by FlowSharpHopeService.\r\n    /// &lt;/summary&gt;\r\n    public static class Program\r\n    {\r\n        public static TextBox tbLog;\r\n        public static Form form;\r\n\t\tpublic static SemanticProcessor sp;\r\n\r\n\t\tprivate static string url = \"http://localhost:5002/\";\r\n\t\tprivate static string PROCESSING = \"processing\";\r\n\r\n\t\t[STAThread]\r\n        public static void Main()\r\n        {\r\n            Application.EnableVisualStyles();\r\n            Application.SetCompatibleTextRenderingDefault(false);\r\n\r\n\t\t\tsp = new SemanticProcessor();\r\n\t\t\tsp.Processing += Processing;\r\n\r\n\t\t\tRouteHandlers routeHandlers = new RouteHandlers(sp);\r\n\r\n            WebServer webServer = new WebServer(routeHandlers);\r\n            webServer.Start(\"localhost\", new int[] { 5001 });\r\n\r\n            form = new Form();\r\n            form.Location = new Point(100, 100);\r\n            form.Size = new Size(500, 200);\r\n            form.Text = \"Stand Alone Runner\";\r\n\r\n            tbLog = new TextBox();\r\n            tbLog.Multiline = true;\r\n            tbLog.Dock = DockStyle.Fill;\r\n            form.Controls.Add(tbLog);\r\n\r\n            Application.Run(form);\r\n        }\r\n        \r\n        public static void Close()\r\n        {\r\n        \tform.Close();\r\n        }\r\n        \r\n        public static void Log(string msg)\r\n        {\r\n        \tform.Invoke(()=&gt;tbLog.AppendText(msg + \"\\r\\n\"));\r\n        }\r\n\r\n\t\tprivate static void Processing(object sender, ProcessEventArgs args)\r\n\t\t{\r\n\t\t\tstring fromMembraneTypeName = null;\r\n\t\t\tstring fromReceptorTypeName = null;\r\n\t\t\t\r\n\t\t\tif (args.FromMembrane != null)\r\n\t\t\t{\r\n\t\t\t\tfromMembraneTypeName = args.FromMembrane.GetType().FullName;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (args.FromReceptor != null)\r\n\t\t\t{\r\n\t\t\t\tfromReceptorTypeName = args.FromReceptor.GetType().FullName;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tstring json = JsonConvert.SerializeObject(new\r\n\t\t\t{\r\n\t\t\t\tFromMembraneTypeName = fromMembraneTypeName,\r\n\t\t\t\tFromReceptorTypeName = fromReceptorTypeName,\r\n\t\t\t\tToMembraneTypeName = args.ToMembrane.GetType().FullName,\r\n\t\t\t\tToReceptorTypeName = args.ToReceptor.GetType().FullName,\r\n\t\t\t\tSemanticTypeTypeName = args.SemanticType.GetType().FullName,\r\n\t\t\t});\r\n\r\n\t\t\tHttp.Get(url + PROCESSING + \"?proc=\" + json);\r\n\t\t}\r\n\t}\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
</ArrayOfElementPropertyBag>