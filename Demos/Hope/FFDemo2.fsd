<?xml version="1.0" encoding="utf-16"?>
<ArrayOfElementPropertyBag xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="6e0d279d-d4f3-4a0c-bc74-60f77383336d" Visible="true" Text="Show&#xD;&#xA;Image" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>298</X>
        <Y>400</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>298</X>
      <Y>400</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"ShowImage","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="e68e6d83-9b34-4862-9684-24967b7d2cbb" Visible="true" Text="Show&#xD;&#xA;Image" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>126</X>
        <Y>510</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>126</X>
      <Y>510</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ShowImage : IReceptor\r\n\t{\r\n\t\tprotected List&lt;Form&gt; forms = new List&lt;Form&gt;();\r\n\t\t\r\n\t\t// Use ISemanticType to see all types being published!\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_Image img)\r\n\t\t{\r\n\t\t\tProgram.form.BeginInvoke(()=&gt;\r\n\t\t\t{\r\n\t\t\t\tForm form = Program.layoutManager.RequestForm(img.Image.Width+30, img.Image.Height+30, img.Caption);\r\n\t            PictureBox pb = new PictureBox();\r\n\t            pb.Dock = DockStyle.Fill;\r\n\t            pb.Image = img.Image;\r\n\t            form.Controls.Add(pb);\r\n\t            form.Show();\r\n\t            forms.Add(form);\r\n\t        });\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="e98dadb7-e156-4dd6-b77a-aa81bed45328" Visible="true" Text="ST_Image" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>480</X>
        <Y>-27</Y>
      </Location>
      <Size>
        <Width>178</Width>
        <Height>32</Height>
      </Size>
      <X>480</X>
      <Y>-27</Y>
      <Width>178</Width>
      <Height>32</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Drawing;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Image : ISemanticType \r\n\t{\r\n\t\tpublic string Caption {get;set;}\r\n\t\tpublic Image Image {get;set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="85b3adbf-c506-4f60-8171-1394a9877cb8" Visible="true" Text="Get&#xD;&#xA;Vehicle&#xD;&#xA;Image" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>297</X>
        <Y>326</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>297</X>
      <Y>326</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"GetVehicleImage","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="7a84730d-f420-40ca-97c2-9f72c79f60d2" Visible="true" Text="Get&#xD;&#xA;Vehicle&#xD;&#xA;Image" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>124</X>
        <Y>433</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>124</X>
      <Y>433</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Drawing;\r\nusing System.IO;\r\nusing System.Net;\r\n\r\nusing Clifton.Core.Semantics;\r\nusing HtmlAgilityPack;\r\n\r\nnamespace App\r\n{\r\n\tpublic class GetVehicleImage : IReceptor\r\n\t{\r\n\t\t[Publishes(typeof(ST_Image))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_Vehicle vehicle)\r\n\t\t{\r\n            HtmlWeb web = new HtmlWeb();\r\n            HtmlAgilityPack.HtmlDocument doc = web.Load(\"https://www.google.com/search?q=\"+String.Join(\"+\", new String[] {vehicle.Year.ToString(), vehicle.Make, vehicle.Model})+\"&amp;tbm=isch\");\r\n            var nodes = doc.DocumentNode.SelectNodes(\"(//*[@id='ires']//img)[1]\");\r\n            var src = nodes[0].Attributes[\"src\"].Value;\r\n            WebClient client = new WebClient();\r\n            client.Headers.Add(\"user-agent\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR 1.0.3705;)\");\r\n            Stream reader = client.OpenRead(src);\r\n\r\n            var bytes = default(byte[]);\r\n            using (var memstream = new MemoryStream())\r\n            {\r\n                reader.CopyTo(memstream);\r\n                bytes = memstream.ToArray();\r\n            }\r\n\r\n            MemoryStream ms = new MemoryStream(bytes);\r\n            var img = System.Drawing.Image.FromStream(ms);\r\n\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, \r\n\t\t\tnew ST_Image \r\n\t\t\t{\r\n\t\t\t\tCaption = vehicle.Year.ToString() + \" \" + vehicle.Make + \" \" + vehicle.Model,\r\n\t\t\t\tImage = img\r\n\t\t\t});            \r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="e4d8056b-9191-4769-8105-1542e3150057" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>1272</X>
        <Y>-276</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>1272</X>
      <Y>-276</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"HtmlAgilityPack.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="876f83b2-18f6-4d2e-8d5b-165488962ae7" Visible="true" Text="Client&#xD;&#xA;Address" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>419</X>
        <Y>254</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>419</X>
      <Y>254</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"ClientAddress","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="b89241ba-f252-4d02-a6a5-55cdf489a79b" Visible="true" Text="Client&#xD;&#xA;Address" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-55</X>
        <Y>278</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>-55</X>
      <Y>278</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Xml;\r\nusing System.Xml.Linq;\r\nusing System.Xml.XPath;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ClientAddress : IReceptor\r\n\t{\r\n\t\t[Publishes(typeof(ST_Address))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_PolicyXml xml)\r\n\t\t{\r\n            var root = XDocument.Parse(xml.Xml);\r\n\t\t\tXElement clientAddr = root.XPathSelectElement(\"PolicyInfo/Account/Clients/Client/Address\");\r\n\t\t\tstring zip = XmlHelpers.GetValue(clientAddr, \"ZipCode\");\r\n\t\t\t\r\n\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, \r\n\t\t\tnew ST_Address()\r\n\t\t\t{\r\n\t\t\t\tAddress1 = XmlHelpers.GetValue(clientAddr, \"Address1\"),\r\n\t\t\t\tAddress2 = XmlHelpers.GetSafeValue(clientAddr, \"Address2\"),\r\n\t\t\t\tCity = new ST_City() {City = XmlHelpers.GetValue(clientAddr, \"City\")},\r\n\t\t\t\tState = new ST_State() {State = XmlHelpers.GetValue(clientAddr, \"State\")},\r\n\t\t\t\tZip = new ST_Zip() \r\n\t\t\t\t{\r\n\t\t\t\t\tZip5 = new ST_Zip5() { Zip5 = zip.LeftOf(\"-\")},\r\n\t\t\t\t\tZip4 = new ST_Zip4() { Zip4 = zip.RightOf(\"-\")}\r\n\t\t\t\t},\r\n\t\t\t}); \r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="365520ba-bd94-4a5f-a6a1-b07af6dcfe05" Visible="true" Text="Show&#xD;&#xA;Driver" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>354</X>
        <Y>50</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>354</X>
      <Y>50</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"ShowDriver","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="28f3ecf5-1dc1-4bd0-b498-f4a2941ae0ff" Visible="true" Text="Show&#xD;&#xA;Driver" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>33</X>
        <Y>354</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>33</X>
      <Y>354</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Data;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ShowDriver : IReceptor\r\n\t{\r\n\t\tprotected Form form;\r\n\t\tprotected DataGridView dgv;\r\n\t\tprotected DataTable dtDrivers;\r\n\t\tprotected DataView dvDrivers;\r\n\t\t\r\n\t\tpublic ShowDriver()\r\n\t\t{\r\n\t\t\tform = Program.layoutManager.RequestForm(600, 150, \"Drivers\");\r\n\t\t\tdgv = new DataGridView();\r\n\t\t\tdtDrivers = new DataTable();\r\n\t\t\tdtDrivers.Columns.Add(new DataColumn(\"LastName\", typeof(string)));\r\n\t\t\tdtDrivers.Columns.Add(new DataColumn(\"FirstName\", typeof(string)));\r\n\t\t\tdtDrivers.Columns.Add(new DataColumn(\"DOB\", typeof(DateTime)));\r\n\t\t\tdtDrivers.Columns.Add(new DataColumn(\"Age\", typeof(int)));\r\n\t\t\tdtDrivers.Columns.Add(new DataColumn(\"Gender\", typeof(string)));\r\n\t\t\tdtDrivers.Columns.Add(new DataColumn(\"LicenseNumber\", typeof(string)));\r\n\t\t\tdtDrivers.Columns.Add(new DataColumn(\"LicenseState\", typeof(string)));\r\n\t\t\tdvDrivers = new DataView(dtDrivers);\r\n\t\t\tdgv.Dock = DockStyle.Fill;\r\n\t\t\tdgv.ReadOnly = true;\r\n\t\t\tdgv.RowHeadersVisible = false;\r\n\t\t\tdgv.AllowUserToAddRows = false;\r\n\t\t\tdgv.AllowUserToDeleteRows = false;\r\n\t\t\tdgv.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill; \r\n\t\t\tdgv.DataSource = dvDrivers;\r\n\t\t\tform.Controls.Add(dgv);\r\n\t\t\tform.Show();\r\n\t\t}\r\n\t\t\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_Driver driver)\r\n\t\t{\r\n\t\t\tform.BeginInvoke(()=&gt;\r\n\t\t\t{\r\n\t\t\t\tDataRow row = dtDrivers.NewRow();\r\n\t\t\t\trow[\"LastName\"] = driver.LastName;\r\n\t\t\t\trow[\"FirstName\"] = driver.FirstName;\r\n\t\t\t\trow[\"DOB\"] = driver.DOB.ToString(\"MM/dd/yyyy\");\r\n\t\t\t\trow[\"Age\"] = GetAge(driver.DOB);\r\n\t\t\t\trow[\"Gender\"] = driver.Gender;\r\n\t\t\t\trow[\"LicenseNumber\"] = driver.LicenseNumber;\r\n\t\t\t\trow[\"LicenseState\"] = driver.LicenseState;\r\n\t\t\t\tdtDrivers.Rows.Add(row);\r\n\t\t\t\tApplication.DoEvents();\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t// https://stackoverflow.com/questions/9/calculate-age-in-c-sharp\r\n\t\tprotected int GetAge(DateTime dob)\r\n\t\t{\r\n\t\t\tint inow = int.Parse(DateTime.Now.ToString(\"yyyyMMdd\"));\r\n\t\t\tint idob = int.Parse(dob.ToString(\"yyyyMMdd\"));\r\n\t\t\tint age = (inow - idob) / 10000;\t\t\r\n\t\t\t\r\n\t\t\treturn age;\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="d32564cd-3bf3-4ca1-beac-61df83c20cb9" Visible="true" Text="ST_Driver" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>480</X>
        <Y>-66</Y>
      </Location>
      <Size>
        <Width>178</Width>
        <Height>32</Height>
      </Size>
      <X>480</X>
      <Y>-66</Y>
      <Width>178</Width>
      <Height>32</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Driver : ISemanticType \r\n\t{\r\n\t\tpublic bool IsValid\r\n\t\t{\r\n\t\t\tget\r\n\t\t\t{\r\n\t\t\t\treturn \r\n\t\t\t\t\t!String.IsNullOrEmpty(FirstName) &amp;&amp;\r\n\t\t\t\t\t!String.IsNullOrEmpty(LastName) &amp;&amp;\r\n\t\t\t\t\tDOB != default(DateTime) &amp;&amp;\r\n\t\t\t\t\t!String.IsNullOrEmpty(Gender) &amp;&amp;\r\n\t\t\t\t\t!String.IsNullOrEmpty(LicenseNumber) &amp;&amp;\r\n\t\t\t\t\t!String.IsNullOrEmpty(LicenseState);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tpublic string FirstName {get; set;}\r\n\t\tpublic string LastName {get; set;}\r\n\t\tpublic DateTime DOB {get; set;}\r\n\t\tpublic string Gender {get;set;}\r\n\t\tpublic string LicenseNumber {get;set;}\r\n\t\tpublic string LicenseState {get;set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="9de7ae10-356f-4925-b32e-3a95e61dcb80" Visible="true" Text="Extract&#xD;&#xA;Drivers" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>296</X>
        <Y>91</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>296</X>
      <Y>91</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"ExtractDrivers","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="02d80a15-1d23-4d34-af3d-1e3dac711b7f" Visible="true" Text="Extract&#xD;&#xA;Drivers" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>32</X>
        <Y>278</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>32</X>
      <Y>278</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Xml;\r\nusing System.Xml.Linq;\r\nusing System.Xml.XPath;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ExtractDrivers : IReceptor\r\n\t{\r\n\t\t[Publishes(typeof(ST_Driver))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_PolicyXml xml)\r\n\t\t{\r\n            var root = XDocument.Parse(xml.Xml);\r\n            \r\n\t\t\tIEnumerable&lt;XElement&gt; drivers = root.XPathSelectElements(\"PolicyInfo/Policy/Lines/Line/Drivers/Driver\");\r\n\t\t\t\r\n\t\t\tforeach (XElement driverEl in drivers)\r\n\t\t\t{\r\n                string firstName;\r\n                string lastName;\r\n                DateTime DOB;\r\n                string gender;\r\n                string licenseNumber;\r\n                string licenseState;\r\n                IEnumerable&lt;XElement&gt; exposures = driverEl.XPathSelectElements(\"Exposures/Exposure\");\r\n\r\n                firstName = XmlHelpers.GetValue(driverEl, \"NameFirst\");\r\n                lastName = XmlHelpers.GetValue(driverEl, \"NameLast\");\r\n                DateTime.TryParse(XmlHelpers.GetExposureValue(exposures, \"DateOfBirth\"), out DOB);\r\n                gender = XmlHelpers.GetExposureValue(exposures, \"Gender\");\r\n                licenseNumber = XmlHelpers.GetExposureValue(exposures, \"DriverLicenseNumber\");\r\n                licenseState = XmlHelpers.GetExposureValue(exposures, \"LicenseState\");\r\n                \r\n\t\t\t\tvar driver = new ST_Driver() \r\n\t\t\t\t{\r\n\t\t\t\t\tFirstName = firstName,\r\n\t\t\t\t\tLastName = lastName,\r\n\t\t\t\t\tDOB = DOB,\r\n\t\t\t\t\tGender = gender,\r\n\t\t\t\t\tLicenseNumber = licenseNumber,\r\n\t\t\t\t\tLicenseState = licenseState,\r\n\t\t\t\t};\r\n                \r\n                if (driver.IsValid)\r\n                {\r\n\t\t\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, driver); \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="7d0ec7dd-7335-4887-874c-42ea24390774" Visible="true" Text="LayoutManager.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>1023</X>
        <Y>-621</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>1023</X>
      <Y>-621</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>LayoutManager.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System.Collections.Generic;\r\nusing System.Drawing;\r\nusing System.Linq;\r\nusing System.Windows.Forms;\r\n\r\nnamespace App\r\n{\r\n    public class LayoutManager\r\n    {\r\n    \tprotected List&lt;List&lt;Rectangle&gt;&gt; rowRegions = new List&lt;List&lt;Rectangle&gt;&gt;();\r\n    \t\r\n    \tpublic LayoutManager()\r\n    \t{\r\n    \t\tCreateRow();\r\n    \t}\r\n    \t\r\n    \tpublic Form RequestForm(int w, int h, string caption)\r\n    \t{\r\n\t\t\tForm form = new Form();\r\n\t\t\tvar rect = Program.layoutManager.RequestRegion(w, h);\r\n\t\t\tform.Location = rect.Location;\r\n\t\t\tform.Size = rect.Size;\r\n\t\t\tform.StartPosition = FormStartPosition.Manual;\r\n\t\t\tform.Text = caption;\r\n\t\t\t\r\n\t\t\treturn form;\r\n    \t}\r\n    \t\r\n    \t// Returns a region where the requested box of width and height can fit on the screen.\r\n    \tpublic Rectangle RequestRegion(int w, int h)\r\n    \t{\r\n    \t\tint screenWidth = Screen.PrimaryScreen.WorkingArea.Width; \r\n    \t\tint currentWidth = 0;\r\n    \t\tint currentY = 0;\r\n    \t\t\r\n    \t\tList&lt;Rectangle&gt; currentRow = rowRegions.Last();\r\n    \t\t\r\n    \t\tif (currentRow.Count &gt; 0)\r\n    \t\t{\r\n\t    \t\tcurrentWidth = currentRow.Sum(r=&gt;r.Width);\r\n    \t\t\tcurrentY = currentRow.First().Y;\r\n    \t\t}\r\n    \t\t\r\n    \t\tif (currentWidth + w &gt; screenWidth)\r\n    \t\t{\r\n    \t\t\tcurrentY = currentRow.Max(r=&gt;r.Y + r.Height); \r\n    \t\t\tcurrentRow = CreateRow();\r\n    \t\t\tcurrentWidth = 0;\r\n    \t\t}\r\n    \t\t\r\n\t\t\tRectangle ret = new Rectangle(currentWidth, currentY, w, h);\r\n\t\t\t\r\n\t\t\tProgram.Log(\"Position = \" + ret.ToString());\r\n\t\t\t\r\n\t\t\tcurrentRow.Add(ret);\r\n    \t\t\r\n    \t\treturn ret;\r\n    \t}\r\n    \t\r\n    \tprotected List&lt;Rectangle&gt; CreateRow()\r\n    \t{\r\n    \t\tList&lt;Rectangle&gt; row = new List&lt;Rectangle&gt;();\r\n    \t\trowRegions.Add(row);\r\n    \t\t\r\n    \t\treturn row;\r\n    \t}\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="5a6bf041-0730-498e-8abd-54b15b12c29f" Visible="true" Text="Show&#xD;&#xA;Vehicle" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>295</X>
        <Y>250</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>295</X>
      <Y>250</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"ShowVehicle","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="b77fcd43-145e-48c6-8a2f-1341e9adad35" Visible="true" Text="Show&#xD;&#xA;Vehicle" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>122</X>
        <Y>354</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>122</X>
      <Y>354</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Data;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ShowVehicle : IReceptor\r\n\t{\r\n\t\tprotected Form form;\r\n\t\tprotected DataGridView dgv;\r\n\t\tprotected DataTable dtVehicles;\r\n\t\tprotected DataView dvVehicles;\r\n\t\t\r\n\t\tpublic ShowVehicle()\r\n\t\t{\r\n\t\t\tform = Program.layoutManager.RequestForm(400, 200, \"Vehicles\");\r\n\t\t\tdgv = new DataGridView();\r\n\t\t\tdtVehicles = new DataTable();\r\n\t\t\tdtVehicles.Columns.Add(new DataColumn(\"Make\", typeof(string)));\r\n\t\t\tdtVehicles.Columns.Add(new DataColumn(\"Model\", typeof(string)));\r\n\t\t\tdtVehicles.Columns.Add(new DataColumn(\"Year\", typeof(int)));\r\n\t\t\tdvVehicles = new DataView(dtVehicles);\r\n\t\t\tdgv.Dock = DockStyle.Fill;\r\n\t\t\tdgv.ReadOnly = true;\r\n\t\t\tdgv.RowHeadersVisible = false;\r\n\t\t\tdgv.AllowUserToAddRows = false;\r\n\t\t\tdgv.AllowUserToDeleteRows = false;\r\n\t\t\tdgv.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.Fill; \r\n\t\t\tdgv.DataSource = dvVehicles;\r\n\t\t\tform.Controls.Add(dgv);\r\n\t\t\tform.Show();\r\n\t\t}\r\n\t\t\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_Vehicle vehicle)\r\n\t\t{\r\n\t\t\tform.BeginInvoke(()=&gt;\r\n\t\t\t{\r\n\t\t\t\tDataRow row = dtVehicles.NewRow();\r\n\t\t\t\trow[\"Make\"] = vehicle.Make;\r\n\t\t\t\trow[\"Model\"] = vehicle.Model;\r\n\t\t\t\trow[\"Year\"] = vehicle.Year;\r\n\t\t\t\tdtVehicles.Rows.Add(row);\r\n\t\t\t\tApplication.DoEvents();\r\n\t\t\t});\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="c3809506-121c-45b3-abd3-4f13738b0fd9" Visible="true" Text="XmlHelpers.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>572</X>
        <Y>-696</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>572</X>
      <Y>-696</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>XmlHelpers.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Xml.Linq;\r\nusing System.Xml.XPath;\r\n\r\nnamespace App\r\n{\r\n    public static class XmlHelpers\r\n    {\r\n        public static string GetValue(XElement el, string attrName)\r\n        {\r\n            return el.Element(attrName).Value;\r\n        }\r\n\r\n        public static string GetSafeValue(XElement el, string attrName)\r\n        {\r\n        \tstring ret = string.Empty;\r\n        \tXElement child = el.Element(attrName);\r\n        \t\r\n        \tif (child != null)\r\n        \t{\r\n            \tret = el.Element(attrName).Value;\r\n            }\r\n            \r\n            return ret;\r\n        }\r\n\r\n        public static string GetExposureValue(IEnumerable&lt;XElement&gt; exposures, string typeName)\r\n        {\r\n            string ret = null;\r\n\r\n            var exp = exposures.FirstOrDefault(x =&gt; x.Element(\"Type\").Value == typeName);\r\n\r\n            if (exp != null)\r\n            {\r\n                ret = exp.Element(\"Value\").Value;\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        public static string GetExposureValue(IEnumerable&lt;XElement&gt; exposures, string[] typeNameOptions)\r\n        {\r\n            int idx = -1;\r\n            string ret = null;\r\n\r\n            while (++idx &lt; typeNameOptions.Length)\r\n            {\r\n                var exp = exposures.FirstOrDefault(x =&gt; x.Element(\"Type\").Value == typeNameOptions[idx]);\r\n\r\n                if (exp != null)\r\n                {\r\n                    ret = exp.Element(\"Value\").Value;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            return ret;\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="eb3c050b-dfa5-45d5-94ba-106f87d88ef3" Visible="true" Text="ST_Vehicle" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>480</X>
        <Y>-109</Y>
      </Location>
      <Size>
        <Width>178</Width>
        <Height>32</Height>
      </Size>
      <X>480</X>
      <Y>-109</Y>
      <Width>178</Width>
      <Height>32</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Vehicle : ISemanticType \r\n\t{\r\n\t\tpublic bool IsValid\r\n\t\t{\r\n\t\t\tget\r\n\t\t\t{\r\n\t\t\t\treturn \r\n\t\t\t\t\t!String.IsNullOrEmpty(Make) &amp;&amp;\r\n\t\t\t\t\t!String.IsNullOrEmpty(Model) &amp;&amp;\r\n\t\t\t\t\tYear != 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tpublic string Make {get; set;}\r\n\t\tpublic string Model {get; set;}\r\n\t\tpublic int Year {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="f1f2541b-5a4f-433f-ab5e-49014f777bda" Visible="true" Text="Extract&#xD;&#xA;Vehicles" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>298</X>
        <Y>174</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>298</X>
      <Y>174</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"ExtractVehicles","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="07cc0e01-29ec-4371-8de8-5da7e13b6eaf" Visible="true" Text="Extract&#xD;&#xA;Vehicles" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>121</X>
        <Y>278</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>121</X>
      <Y>278</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Xml;\r\nusing System.Xml.Linq;\r\nusing System.Xml.XPath;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ExtractVehicles : IReceptor\r\n\t{\r\n\t\t[Publishes(typeof(ST_Vehicle))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_PolicyXml xml)\r\n\t\t{\r\n            var root = XDocument.Parse(xml.Xml);\r\n            \r\n\t\t\tIEnumerable&lt;XElement&gt; risks = root.XPathSelectElements(\"PolicyInfo/Policy/Lines/Line/Risks/Risk\");\r\n\t\t\t\r\n\t\t\tforeach (XElement risk in risks)\r\n\t\t\t{\r\n                string make;\r\n                string model;\r\n                int year;\r\n                IEnumerable&lt;XElement&gt; exposures = risk.XPathSelectElements(\"Exposures/Exposure\");\r\n\r\n                make = XmlHelpers.GetExposureValue(exposures, new string[] { \"VehicleMake\", \"Make\" } );\r\n                model = XmlHelpers.GetExposureValue(exposures, new string[] { \"VehicleModel\", \"Model\" } );\r\n                Int32.TryParse(XmlHelpers.GetExposureValue(exposures, new string[] { \"VehicleYear\", \"Year\" }), out year);\r\n                \r\n\t\t\t\tvar vehicle = new ST_Vehicle() \r\n\t\t\t\t{\r\n\t\t\t\t\tMake = make,\r\n\t\t\t\t\tModel = model,\r\n\t\t\t\t\tYear = year,\r\n\t\t\t\t};\r\n                \r\n                if (vehicle.IsValid)\r\n                {\r\n\t\t\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, vehicle); \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="210d0119-8f9f-4a11-954a-830562be25d5" Visible="true" Text="ViewXml" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>246</X>
        <Y>211</Y>
      </Location>
      <Size>
        <Width>70</Width>
        <Height>60</Height>
      </Size>
      <X>246</X>
      <Y>211</Y>
      <Width>70</Width>
      <Height>60</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"ViewXml","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="6f56090d-5985-4161-9543-41eb6fc62930" Visible="true" Text="ViewXml" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>126</X>
        <Y>210</Y>
      </Location>
      <Size>
        <Width>70</Width>
        <Height>60</Height>
      </Size>
      <X>126</X>
      <Y>210</Y>
      <Width>70</Width>
      <Height>60</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Drawing;\r\nusing System.IO;\r\nusing System.Text;\r\nusing System.Windows.Forms;\r\nusing System.Xml;\r\nusing System.Xml.Linq;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ViewXml : IReceptor\r\n\t{\r\n\t\tprotected Form form;\r\n\t\tprotected TextBox tbLog;\r\n\t\t\r\n\t\tpublic ViewXml()\r\n\t\t{\r\n\t\t\tform = Program.layoutManager.RequestForm(400, 300, \"Xml Viewer\");\r\n\t\t\ttbLog = new TextBox();\r\n\t\t\ttbLog.Multiline = true;\r\n\t\t\ttbLog.Dock = DockStyle.Fill;\r\n\t\t\ttbLog.ScrollBars = ScrollBars.Both;\r\n\t\t\ttbLog.WordWrap = false;\r\n\t\t\tform.Controls.Add(tbLog);\r\n\t\t\tform.Show();\r\n\t\t}\r\n\t\t\r\n\t\t// TODO: I should be able to receive an ST_Xml type here!\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_PolicyXml xml)\r\n\t\t{\r\n\t\t\tform.BeginInvoke(()=&gt;\r\n\t\t\t{\r\n\t\t\t\tException ex;\r\n\t\t\t\tstring formattedXml = FormatXml(xml.Xml, out ex);\r\n\t\t\t\ttbLog.Text = (ex == null) ? formattedXml : ex.Message;\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tprivate string FormatXml(string xml, out Exception ex)\r\n\t\t{\r\n\t\t\tvar stringBuilder = new StringBuilder();\r\n\t\t\tex = null;\r\n\t\t\t\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t    var element = XElement.Parse(xml);\r\n\t\t\t\r\n\t\t\t    var settings = new XmlWriterSettings();\r\n\t\t\t    settings.OmitXmlDeclaration = true;\r\n\t\t\t    settings.Indent = true;\r\n\t\t\t    settings.NewLineOnAttributes = true;\r\n\t\t\t\r\n\t\t\t    using (var xmlWriter = XmlWriter.Create(stringBuilder, settings))\r\n\t\t\t    {\r\n\t\t\t        element.Save(xmlWriter);\r\n\t\t\t    }\r\n\t\t    }\r\n\t\t    catch(Exception ex2)\r\n\t\t    {\r\n\t\t    \tex=ex2;\r\n\t\t    }\r\n\t\t    \r\n\t\t\r\n\t\t    return stringBuilder.ToString();\t\t\r\n\t\t    \r\n\t\t    /*\r\n\t\t\tstring result = \"\";\r\n\t\t\tex = null;\r\n\t\t\t\r\n\t\t\tMemoryStream mStream = new MemoryStream();\r\n\t\t\tXmlTextWriter writer = new XmlTextWriter(mStream, Encoding.Unicode);\r\n\t\t\tXmlDocument document   = new XmlDocument();\r\n\t\t\t\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t    document.LoadXml(xml);\r\n\t\t\t    writer.Formatting = Formatting.Indented;\r\n\t\t\t    document.WriteContentTo(writer);\r\n\t\t\t    writer.Flush();\r\n\t\t\t    mStream.Flush();\r\n\t\t\t\r\n\t\t\t    // Have to rewind the MemoryStream in order to read\r\n\t\t\t    // its contents.\r\n\t\t\t    mStream.Position = 0;\r\n\t\t\t    \r\n\t\t\t    StreamReader sReader = new StreamReader(mStream);\r\n\t\t\t    result = sReader.ReadToEnd();\r\n\t\t\t}\r\n\t\t\tcatch (Exception ex2)\r\n\t\t\t{\r\n\t\t\t\t// TODO: Show exception.\r\n\t\t\t\tex = ex2;\r\n\t\t\t}\r\n\t\t\tfinally\r\n\t\t\t{\r\n\t\t\t\tmStream.Close();\r\n\t\t\t\twriter.Close();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn result;\r\n\t\t\t*/\r\n\t\t}\t\t\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="b5cea3c1-1e4c-4939-8498-2293b20339fe" Visible="true" Text="ST_Xml" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>480</X>
        <Y>-164</Y>
      </Location>
      <Size>
        <Width>178</Width>
        <Height>32</Height>
      </Size>
      <X>480</X>
      <Y>-164</Y>
      <Width>178</Width>
      <Height>32</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Xml : ISemanticType \r\n\t{\r\n\t\tpublic string Xml {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="f294247d-1631-4bf2-9156-17cbcdbc0dcf" Visible="true" Text="Load Policy&#xD;&#xA;From File" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>238</X>
        <Y>134</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>238</X>
      <Y>134</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"LoadPolicyFromFile","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="eae0a246-8151-48ec-920d-eb17d1ec6caa" Visible="true" Text="Load Policy &#xD;&#xA;From File" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>121</X>
        <Y>136</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>121</X>
      <Y>136</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.IO;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class LoadPolicyFromFile : IReceptor\r\n\t{\r\n\t\t[Publishes(typeof(ST_PolicyXml))]\r\n\t\t[Publishes(typeof(ST_Xml))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_PolicyXmlPath xmlPath)\r\n\t\t{\r\n\t\t\tstring xml = File.ReadAllText(xmlPath.FilePath);\r\n\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, new ST_PolicyXml() {Xml = xml});\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="42faeee3-58dd-43fe-a25d-eb5c703d6c19" Visible="true" Text="ST_PolicyXml" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>481</X>
        <Y>-203</Y>
      </Location>
      <Size>
        <Width>178</Width>
        <Height>32</Height>
      </Size>
      <X>481</X>
      <Y>-203</Y>
      <Width>178</Width>
      <Height>32</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_PolicyXml : ST_Xml { } \r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="9d98cd45-0435-4b4c-a5d0-caaa702f577b" Visible="true" Text="ST_PolicyXmlPath" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>594</X>
        <Y>263</Y>
      </Location>
      <Size>
        <Width>178</Width>
        <Height>32</Height>
      </Size>
      <X>594</X>
      <Y>263</Y>
      <Width>178</Width>
      <Height>32</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>3</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.ComponentModel;\r\nusing System.Drawing.Design;\r\nusing System.Windows.Forms.Design;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_PolicyXmlPath : ISemanticType \r\n\t{\r\n\t\t[EditorAttribute(typeof(FileNameEditor), typeof(UITypeEditor))]\r\n\t\tpublic string FilePath {get; set;}\r\n\t\t\r\n\t\tpublic ST_PolicyXmlPath()\r\n\t\t{\r\n\t\t\tFilePath = \"TestPolicy.xml\";\r\n\t\t}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="d8444c33-4191-4ed4-a1b3-74ebcb813a4f" Visible="true" Text="Constants.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>573</X>
        <Y>-663</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>573</X>
      <Y>-663</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>Constants.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Xml;\r\nusing System.Xml.Serialization;\r\n\r\nnamespace App\r\n{\r\n    public class Constants\r\n    {\r\n   \t\tpublic const string USER_ID = \"457INTER2602\";\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="58be6655-339c-4e91-9525-7c1cd5847512" Visible="true" Text="ReceptorDescription.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>828</X>
        <Y>-639</Y>
      </Location>
      <Size>
        <Width>170</Width>
        <Height>25</Height>
      </Size>
      <X>828</X>
      <Y>-639</Y>
      <Width>170</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>ReceptorDescription.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System.Collections.Generic;\r\n\r\nnamespace App\r\n{\r\n    public class ReceptorDescription\r\n    {\r\n        /// &lt;summary&gt;\r\n        /// The type name of the receptor class that receives the ReceptorSemanticType and optionally publishes other types.\r\n        /// &lt;/summary&gt;\r\n        public string ReceptorTypeName { get; set; }\r\n\r\n        /// &lt;summary&gt;\r\n        /// The semantic type that the receptor Process method receives.\r\n        /// &lt;/summary&gt;\r\n        public string ReceivingSemanticType { get; set; }\r\n\r\n        /// &lt;summary&gt;\r\n        /// The types that the receptor Process method publishes.\r\n        /// &lt;/summary&gt;\r\n        public List&lt;string&gt; Publishes { get; set; }\r\n\r\n        public ReceptorDescription()\r\n        {\r\n            Publishes = new List&lt;string&gt;();\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_USPSAddressResponse" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="05fffccf-77c3-436b-b357-968aad958c25" Visible="true" Text="ST_USPSAddressError" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>479</X>
        <Y>-334</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>479</X>
      <Y>-334</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n    public class ST_USPSAddressError : ISemanticType\r\n    {\r\n\t\tpublic int Number {get;set;}\r\n\t\tpublic string Source {get;set;}\r\n\t\tpublic string Description {get;set;}\r\n\t\tpublic string HelpFile {get;set;}\r\n\t\tpublic string HelpContext {get;set;}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_HttpGet" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="2cfb93e3-fea6-4ab0-a1ae-1245b0830686" Visible="true" Text="ST_ShowSemanticType" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>674</X>
        <Y>-457</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>674</X>
      <Y>-457</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n    public class ST_ShowSemanticType : ISemanticType\r\n    {\r\n    \tpublic ISemanticType Type {get; set;}\r\n    }\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="b38a0f57-0f05-4b84-ae66-91278665300e" Visible="true" Text="Show&#xD;&#xA;Semantic&#xD;&#xA;Type" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>559</X>
        <Y>576</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>559</X>
      <Y>576</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"ShowSemanticType","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="abfab2a4-e976-4ca8-a6d0-8527c0fee47b" Visible="true" Text="Show&#xD;&#xA;Semantic&#xD;&#xA;Type" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-128</X>
        <Y>644</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>-128</X>
      <Y>644</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ShowSemanticType : IReceptor\r\n\t{\r\n\t\tprotected Form form;\r\n\t\tprotected PropertyGrid pg;\r\n\t\t\r\n\t\tpublic ShowSemanticType()\r\n\t\t{\r\n\t\t\tform = Program.layoutManager.RequestForm(400, 500, \"Semantic Type Viewer\");\r\n\t\t\tpg = new PropertyGrid();\r\n\t\t\tpg.Dock = DockStyle.Fill;\r\n\t\t\tform.Controls.Add(pg);\r\n\t\t\tform.Show();\r\n\t\t}\r\n\t\t\r\n\t\t// Use ISemanticType to see all types being published!\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_ShowSemanticType st)\r\n\t\t{\r\n\t\t\tform.BeginInvoke(()=&gt;\r\n\t\t\t{\r\n\t\t\t\tpg.SelectedObject = st.Type;\r\n\t\t\t\tApplication.DoEvents();\r\n\t\t\t});\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="USPSValidationResponse" ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="1809199b-11fa-4819-a5c5-c3c0f551e6c1" Visible="true" Text="USPS&#xD;&#xA;Validation&#xD;&#xA;Response" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>559</X>
        <Y>503</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>559</X>
      <Y>503</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"USPSValidationResponse","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="" ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="14c0d3f8-8d81-4e3c-8e6e-63a22994eb77" Visible="true" Text="USPS&#xD;&#xA;Validation&#xD;&#xA;Response" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-130</X>
        <Y>571</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>-130</X>
      <Y>571</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Windows.Forms;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class USPSValidationResponse : IReceptor\r\n\t{\r\n\t\t[Publishes(typeof(ST_ShowSemanticType))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_USPSAddressResponse resp)\r\n\t\t{\r\n\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, new ST_ShowSemanticType() {Type = resp});\t\t\r\n\t\t}\r\n\t\t\r\n\t\t[Publishes(typeof(ST_ShowSemanticType))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_USPSAddressError resp)\r\n\t\t{\r\n\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, new ST_ShowSemanticType() {Type = resp});\t\t\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="USPSValidationRequest" ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="1a2b0a06-856e-42e8-9deb-7de60e36ebe8" Visible="true" Text="USPS&#xD;&#xA;Validation&#xD;&#xA;Request" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>559</X>
        <Y>429</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>559</X>
      <Y>429</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"USPSValidationRequest","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="adf7cc41-6a8e-4f42-bc85-386c0fd4e6ad" Visible="true" Text="AddressValidateResponse.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>577</X>
        <Y>-560</Y>
      </Location>
      <Size>
        <Width>242</Width>
        <Height>25</Height>
      </Size>
      <X>577</X>
      <Y>-560</Y>
      <Width>242</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>AddressValidateResponse.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Xml;\r\nusing System.Xml.Serialization;\r\n\r\nnamespace App\r\n{\r\n    public class AddressValidateResponse\r\n    {\r\n\t\tpublic ST_USPSAddressResponse Address { get; set; }    \r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="" ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="2caff50a-de34-49d3-9699-398cdf98e699" Visible="true" Text="USPS&#xD;&#xA;Validation&#xD;&#xA;Request" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-131</X>
        <Y>498</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>-131</X>
      <Y>498</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.IO;\r\nusing System.Text;\r\nusing System.Xml;\r\nusing System.Xml.Serialization;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class USPSValidationRequest : IReceptor\r\n\t{\r\n\t\t[Publishes(typeof(ST_USPSAddressError))]\r\n\t\t[Publishes(typeof(ST_USPSAddressResponse))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_ValidateAddressXml xml)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t            string ret = Http.Get(\"https://secure.shippingapis.com/ShippingAPI.dll?API=Verify&amp;XML=\" + xml.Xml);\r\n\t\r\n\t\t\t\t// For debugging, show ST.\r\n\t            // proc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, new ST_Text() {Text = ret});\r\n\t            \r\n\t            XmlSerializer xs = new XmlSerializer(typeof(AddressValidateResponse));\r\n\t            StringReader sr = new StringReader(ret);\r\n\t            AddressValidateResponse resp = (AddressValidateResponse)xs.Deserialize(sr);\r\n\t            \r\n\t            if (resp.Address.Error != null)\r\n\t            {\r\n\t\t\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, resp.Address.Error);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// USPS reverses the two address lines.\r\n\t\t\t\t\tstring a1 = resp.Address.Address1;\r\n\t\t\t\t\tstring a2 = resp.Address.Address2;\r\n\t\t\t\t\tresp.Address.Address2 = a1;\r\n\t\t\t\t\tresp.Address.Address1 = a2;\r\n\t\t\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, resp.Address);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch(Exception ex)\r\n\t\t\t{\r\n\t\t\t\tSystem.Windows.Forms.MessageBox.Show(ex.Message, \"Error\");\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="XmlSerialization" ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="06fcd8ac-1983-45d0-9f4a-82be0507fa4b" Visible="true" Text="Avr&#xD;&#xA;Serialization" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>557</X>
        <Y>356</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>557</X>
      <Y>356</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"AvrSerialization","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="e8362223-89ac-4466-9275-1e9405a96e45" Visible="true" Text="AddressValidationRequest.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>576</X>
        <Y>-596</Y>
      </Location>
      <Size>
        <Width>221</Width>
        <Height>25</Height>
      </Size>
      <X>576</X>
      <Y>-596</Y>
      <Width>221</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>AddressValidationRequest.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Xml;\r\nusing System.Xml.Serialization;\r\n\r\nnamespace App\r\n{\r\n    public class AddressValidateRequest\r\n    {\r\n        [XmlAttribute] public string USERID { get; set; }\r\n        public int Revision { get; set; }\r\n        public Address Address { get; set; }\r\n\r\n        public AddressValidateRequest()\r\n        {\r\n            USERID = Constants.USER_ID;\r\n            Revision = 1;\r\n            Address = new Address();\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="64da2396-573c-4d95-940e-1662830adedc" Visible="true" Text="Address.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>575</X>
        <Y>-627</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>575</X>
      <Y>-627</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>Address.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Xml;\r\nusing System.Xml.Serialization;\r\n\r\nnamespace App\r\n{\r\n    public class Address\r\n    {\r\n        [XmlAttribute] public int ID { get; set; }\r\n        public string FirmName { get; set; }\r\n        public string Address1 { get; set; }\r\n        public string Address2 { get; set; }\r\n        public string City { get; set; }\r\n        public string State { get; set; }\r\n        public string Urbanization { get; set; }\r\n        public string Zip5 { get; set; }\r\n        public string Zip4 { get; set; }\r\n\r\n        public Address()\r\n        {\r\n            ID = 0;         // Only 1 address\r\n            // These elements must be serialized even if not populated.\r\n            Address1 = \"\";\r\n            Zip4 = \"\";\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="" ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="aa2411a6-9426-40c9-af98-0e67c5680f06" Visible="true" Text="Avr&#xD;&#xA;Serialization" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-132</X>
        <Y>424</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>-132</X>
      <Y>424</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.IO;\r\nusing System.Text;\r\nusing System.Xml;\r\nusing System.Xml.Serialization;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class AvrSerialization : IReceptor\r\n\t{\r\n\t\t[Publishes(typeof(ST_ValidateAddressXml))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_USPSAddressValidateRequest avr)\r\n\t\t{\r\n            XmlWriterSettings xws = new XmlWriterSettings();\r\n            xws.OmitXmlDeclaration = true;\r\n            XmlSerializerNamespaces ns = new XmlSerializerNamespaces();\r\n            ns.Add(\"\", \"\");\r\n            XmlSerializer xs = new XmlSerializer(avr.Request.GetType());\r\n            StringBuilder sb = new StringBuilder();\r\n            TextWriter tw = new StringWriter(sb);\r\n            XmlWriter xtw = XmlWriter.Create(tw, xws);\r\n            xs.Serialize(xtw, avr.Request, ns);\r\n            string xml = sb.ToString();\r\n            \r\n\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, new ST_ValidateAddressXml() {Xml = xml});            \r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_USPSAddressResponse" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="0dc1822b-d85b-4030-b274-3fe5631865a8" Visible="true" Text="ST_USPSAddressResponse" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>478</X>
        <Y>-377</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>478</X>
      <Y>-377</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n    public class ST_USPSAddressResponse : ISemanticType\r\n    {\r\n        public int ID { get; set; }\r\n        public string FirmName { get; set; }\r\n        public string Address1 { get; set; }\r\n        public string Address2 { get; set; }\r\n        public string City { get; set; }\r\n        public string State { get; set; }\r\n        public string Urbanization { get; set; }\r\n        public string Zip5 { get; set; }\r\n        public string Zip4 { get; set; }\r\n        public string DeliveryPoint { get; set; }\r\n        public string CarrierRoute { get; set; }\r\n        public string DPVConfirmation { get; set; }\r\n        public string DPVCMRA { get; set; }\r\n        public string DPVFootnotes { get; set; }\r\n        public string Business { get; set; }\r\n        public string CentralDeliveryPoint { get; set; }\r\n        public string Vacant { get; set; }\r\n\t\tpublic ST_USPSAddressError Error { get; set; }        \r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_Xml" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="3367a84e-bfd9-489a-b000-032bfdb47727" Visible="true" Text="ST_ValidateAddressXml" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>476</X>
        <Y>-417</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>476</X>
      <Y>-417</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n    public class ST_ValidateAddressXml : ISemanticType\r\n    {\r\n        public string Xml { get; set; }\r\n    }\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="4634ffa4-933f-43fe-8855-f01363c32e9f" Visible="true" Text="ST_USPSAddressValidateRequest" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>475</X>
        <Y>-455</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>475</X>
      <Y>-455</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n    public class ST_USPSAddressValidateRequest : ISemanticType\r\n    {\r\n        public AddressValidateRequest Request {get; set;}\r\n    }\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="25b9067d-8c93-4be6-ab2a-e3312ad10307" Visible="true" Text="USPS&#xD;&#xA;Address&#xD;&#xA;Verifier" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>500</X>
        <Y>315</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>500</X>
      <Y>315</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"USPSAddressVerifier","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentReceptorShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="bcded94a-d07a-4aca-ab59-a8832b09e7bf" Visible="true" Text="ShowText" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="false" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-49</X>
        <Y>-367</Y>
      </Location>
      <Size>
        <Width>83</Width>
        <Height>70</Height>
      </Size>
      <X>-49</X>
      <Y>-367</Y>
      <Width>83</Width>
      <Height>70</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"agentName":"ShowText","agentEnabled":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="58e340f3-8379-4980-9a35-f0bb1d26a21b" Visible="true" Text="ST_Text" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>677</X>
        <Y>-153</Y>
      </Location>
      <Size>
        <Width>178</Width>
        <Height>32</Height>
      </Size>
      <X>677</X>
      <Y>-153</Y>
      <Width>178</Width>
      <Height>32</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Text : ISemanticType \r\n\t{\r\n\t\tpublic string Text {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="cb9f35e1-e0b3-4228-9f5e-32513b464b64" Visible="true" Text="ShowText" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-48</X>
        <Y>-441</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>-48</X>
      <Y>-441</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Windows.Forms;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ShowText : IReceptor\r\n\t{\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_Text text)\r\n\t\t{\r\n\t\t\tMessageBox.Show(text.Text, \"Output\", MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n\t\t}\r\n\t\t\r\n\t\t// public void Process(ISemanticProcessor proc, IMembrane membrane, ST_Xml xml)\r\n\t\t// {\r\n\t\t//\tMessageBox.Show(xml.Xml, \"Output\", MessageBoxButtons.OK, MessageBoxIcon.Information);\r\n\t\t// }\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="24117db7-f21b-42ca-9b81-9a1b32369fe1" Visible="true" Text="PropertyContainer.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>829</X>
        <Y>-600</Y>
      </Location>
      <Size>
        <Width>161</Width>
        <Height>25</Height>
      </Size>
      <X>829</X>
      <Y>-600</Y>
      <Width>161</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>RouteHandlers.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System.Collections.Generic;\r\n\r\nnamespace App\r\n{\r\n    public class PropertyContainer\r\n    {\r\n        public List&lt;PropertyData&gt; Types { get; set; }\r\n\r\n        public PropertyContainer()\r\n        {\r\n            Types = new List&lt;PropertyData&gt;();\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="d15f3930-4588-4b7d-8224-1b788bc5ba33" Visible="true" Text="PropertyData.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>860</X>
        <Y>-560</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>860</X>
      <Y>-560</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>RouteHandlers.cs</ExtraData>
    <Json>{"csharp":"","Code":"namespace App\r\n{\r\n    public class PropertyData\r\n    {\r\n        public string Category { get; set; }\r\n        public string Description { get; set; }\r\n        public string Name { get; set; }\r\n        public string TypeName { get; set; }\r\n        public string Value { get; set; }\r\n        public PropertyContainer ChildType { get; set; }\r\n\r\n        public PropertyData()\r\n        {\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="7da5a60f-b994-45c4-97be-7ae9bfc7e36b" Visible="true" Text="RouteHandlers.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>1027</X>
        <Y>-554</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>1027</X>
      <Y>-554</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>RouteHandlers.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel;\r\nusing System.Diagnostics;\r\nusing System.Linq;\r\nusing System.Net;\r\nusing System.Reflection;\r\n\r\nusing Newtonsoft.Json;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\nusing Clifton.Core.Semantics;\r\nusing Clifton.Core.Services.SemanticProcessorService;\r\n\r\nnamespace App\r\n{\r\n\tpublic class RouteHandlers : BaseRouteHandlers\r\n\t{\r\n\t\tprotected const string INSTANTIATE_RECEPTOR = \"instantiateReceptor\";\r\n\t\tprotected const string DESCRIBE_RECEPTOR = \"describeReceptor\";\r\n\t\tprotected const string DESCRIBE_SEMANTIC_TYPE = \"describeSemanticType\";\r\n\t\tprotected const string INSTANTIATE_SEMANTIC_TYPE = \"instantiateSemanticType\";\r\n\t\tprotected const string PUBLISH_SEMANTIC_TYPE = \"publishSemanticType\";\r\n\t\tprotected const string ENABLE_DISABLE_RECEPTOR = \"enableDisableReceptor\";\r\n        protected const string CLOSE = \"close\";\r\n\r\n\t\tprotected SemanticProcessor sp;\r\n\t\tprotected string assyName;\r\n\t\t\r\n\t\t// TODO: Membrane needs to be added to the type name as well.\r\n\t\tprotected Dictionary&lt;string, IReceptor&gt; receptors = new Dictionary&lt;string, IReceptor&gt;();\r\n\r\n\t\tpublic RouteHandlers(SemanticProcessor sp)\r\n\t\t{\r\n\t\t\troutes = new Dictionary&lt;string, Func&lt;HttpListenerContext, string, HandlerResponse&gt;&gt;()\r\n\t\t\t{\r\n\t\t\t\t{INSTANTIATE_RECEPTOR, InstantiateReceptor},\r\n\t\t\t\t{DESCRIBE_RECEPTOR, DescribeReceptor },\r\n\t\t\t\t{DESCRIBE_SEMANTIC_TYPE, DescribeSemanticType },\r\n\t\t\t\t{INSTANTIATE_SEMANTIC_TYPE, InstantiateSemanticType },\r\n\t\t\t\t{PUBLISH_SEMANTIC_TYPE, PublishSemanticType },\r\n\t\t\t\t{ENABLE_DISABLE_RECEPTOR, EnableDisableReceptor },\r\n\t\t\t\t{CLOSE, Close },\r\n\t\t\t};\r\n\r\n\t\t\tthis.sp = sp;\r\n\t\t\tassyName = Process.GetCurrentProcess().ProcessName;\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse InstantiateReceptor(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\tstring typeName = data.RightOf('=');\r\n\t\t\tInstantiateReceptor(typeName);\r\n\t\t\t\r\n\t\t\treturn new HandlerResponse(\"OK\", \"text/text\");\r\n\t\t}\r\n\t\t\r\n\t\tprotected HandlerResponse DescribeReceptor(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\tstring typeName = data.RightOf('=');\r\n\t\t\tList&lt;ReceptorDescription&gt; processMethods = new List&lt;ReceptorDescription&gt;();\r\n\t\t\tType rtype = Type.GetType(typeName + \", \" + assyName);\r\n\t\t\tvar mis = rtype.GetMethods(BindingFlags.Public | BindingFlags.Instance).Where(m =&gt; m.Name == \"Process\");\t\t\t\r\n\t\t\t\r\n\t\t\tmis.ForEach(mi=&gt;\r\n\t\t\t{\r\n\t\t\t\tReceptorDescription descr = new ReceptorDescription();\r\n                descr.ReceptorTypeName = typeName;\r\n                descr.ReceivingSemanticType =  mi.GetParameters()[2].ParameterType.Name;\r\n\t\t\t\tvar attrs = mi.GetCustomAttributes().Where(attr=&gt;attr is PublishesAttribute).Cast&lt;PublishesAttribute&gt;();\r\n\t\t\t\t\r\n\t\t\t\tforeach(var attr in attrs)\r\n\t\t\t\t{\r\n\t\t\t\t\tdescr.Publishes.Add(attr.PublishesType.Name);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tprocessMethods.Add(descr);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tstring json = JsonConvert.SerializeObject(processMethods);\r\n\t\t\t\r\n\t\t\treturn new HandlerResponse(json, \"text/json\");\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse DescribeSemanticType(HttpListenerContext context, string data)\r\n\t\t{\r\n            try\r\n            {\r\n\t\t\t\tType t = Type.GetType(\"App.\" + data.RightOf('=') + \", \" + assyName);\r\n\t\t\t\t\r\n\t\t\t\t// Instantiate the object so we can get any default values.\r\n\t\t\t\tobject obj = Activator.CreateInstance(t);\r\n\t\t\t\t\r\n            \tPropertyInfo[] pis = t.GetProperties(BindingFlags.Public | BindingFlags.Instance);\r\n            \tPropertyContainer pc = new PropertyContainer();\r\n                BuildTypes(obj, pc, pis);\r\n\t            string json = JsonConvert.SerializeObject(pc);\r\n\r\n\t\t\t\treturn new HandlerResponse(json, \"text/json\");\r\n\t\t\t}\r\n\t\t\tcatch(Exception ex)\r\n\t\t\t{\r\n\t            Program.Log(ex.Message+\"\\r\\n\"+ex.StackTrace);\r\n\t\t\t\treturn new HandlerResponse(\"Error: \" + ex.Message, \"text/text\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse InstantiateSemanticType(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\tType t = Type.GetType(\"App.\" + data.RightOf('=') + \", \" + assyName);\r\n\t\t\tISemanticType st = (ISemanticType)Activator.CreateInstance(t);\r\n\t\t\tstring json = JsonConvert.SerializeObject(st);\r\n\r\n\t\t\treturn new HandlerResponse(json, \"text/json\");\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse PublishSemanticType(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\t// TODO: Fix assumptions about ordering of params\r\n\t\t\tstring[] parms = data.Split('&amp;');\r\n\t\t\tType t = Type.GetType(\"App.\" + parms[0].RightOf('=') + \", \" + assyName);\r\n\t\t\tISemanticType st = (ISemanticType)JsonConvert.DeserializeObject(parms[1].RightOf('='), t);\r\n\t\t\tsp.ProcessInstance&lt;App.HopeMembrane&gt;(st);\r\n\r\n\t\t\treturn new HandlerResponse(\"OK\", \"text/text\");\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse EnableDisableReceptor(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\t// TODO: Fix assumptions about ordering of params\r\n\t\t\tstring[] parms = data.Split('&amp;');\r\n\t\t\tstring typeName = \"App.\" + parms[0].RightOf('=');\r\n\r\n\t\t\tif (parms[1].RightOf('=').to_b())\r\n\t\t\t{\r\n\t\t\t\t// enable\r\n\t\t\t\tif (!receptors.ContainsKey(typeName))\r\n\t\t\t\t{\r\n\t\t\t\t\tInstantiateReceptor(typeName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// disable\r\n\t\t\t\tIReceptor receptor;\r\n\r\n\t\t\t\tif (receptors.TryGetValue(typeName, out receptor))\r\n\t\t\t\t{\r\n\t\t\t\t\tsp.Unregister&lt;App.HopeMembrane&gt;(receptor);\r\n\t\t\t\t\treceptors.Remove(typeName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn new HandlerResponse(\"OK\", \"text/text\");\r\n\t\t}\r\n\t\t\r\n\t\tprotected HandlerResponse Close(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\tProgram.Close();\r\n\t\t\t\r\n\t\t\treturn new HandlerResponse(\"OK\", \"text/text\");\r\n\t\t}\r\n\r\n\t\tprotected void InstantiateReceptor(string typeName)\r\n\t\t{\r\n\t\t\tProgram.form.Invoke(() =&gt;\r\n\t\t\t{\r\n\t\t\t\tType t = Type.GetType(typeName + \", \" + assyName);\r\n\t\t\t\tIReceptor receptor = (IReceptor)Activator.CreateInstance(t);\r\n\t\t\t\tsp.Register&lt;App.HopeMembrane&gt;(receptor);\r\n\t\t\t\treceptors[typeName] = receptor;\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n        protected void BuildTypes(object obj, PropertyContainer pc, PropertyInfo[] pis)\r\n        {\r\n            foreach (PropertyInfo pi in pis)\r\n            {\r\n                PropertyData pd = new PropertyData() { Name = pi.Name, TypeName = pi.PropertyType.FullName };\r\n\r\n\t\t\t\tif (obj != null)\r\n\t\t\t\t{\r\n\t                if ((pi.PropertyType.IsValueType) || (pd.TypeName == \"System.String\"))\r\n\t                {\r\n\t\t\t\t\t\t// We want to give the host any default values created in the constructor.\r\n\t\t\t\t\t\tobject val = pi.GetValue(obj);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (val != null)\r\n\t\t\t\t\t\t{\r\n\t\t               \t\tpd.Value = val.ToString();\r\n\t\t               \t}\r\n\t               \t}\r\n               \t}\r\n                \r\n                var cat = pi.GetCustomAttribute&lt;CategoryAttribute&gt;();\r\n                var desc = pi.GetCustomAttribute&lt;DescriptionAttribute&gt;();\r\n                pd.Category = cat == null ? null : cat.Category;\r\n                pd.Description = desc == null ? null : desc.Description;\r\n                pc.Types.Add(pd);\r\n\r\n                if ((!pi.PropertyType.IsValueType) &amp;&amp; (pd.TypeName != \"System.String\"))\r\n                {\r\n                    PropertyInfo[] pisChild = pi.PropertyType.GetProperties(BindingFlags.Public | BindingFlags.Instance);\r\n                    pd.ChildType = new PropertyContainer();\r\n\t\t\t\t\tobject val = pi.GetValue(obj);\r\n                    BuildTypes(val, pd.ChildType, pisChild);\r\n                }\r\n            }\r\n        }\r\n\t}\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_Zip4" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="5f56fbff-840c-4f9f-b63f-bd60c266bc12" Visible="true" Text="ST_Zip4" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>677</X>
        <Y>-213</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>677</X>
      <Y>-213</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Zip4 : ISemanticType \r\n\t{\r\n\t\tpublic string Zip4 {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_Zip5" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="489a6568-2390-4f4b-be4f-5e1eca69aec6" Visible="true" Text="ST_Zip5" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>677</X>
        <Y>-249</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>677</X>
      <Y>-249</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Zip5 : ISemanticType \r\n\t{\r\n\t\tpublic string Zip5 {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_Zip" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="275eaabe-5f71-4f53-bd11-37ccf5758a6c" Visible="true" Text="ST_Zip" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>677</X>
        <Y>-292</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>677</X>
      <Y>-292</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Zip : ISemanticType \r\n\t{\r\n\t\tpublic ST_Zip5 Zip5 {get; set;}\r\n\t\tpublic ST_Zip4 Zip4 {get; set;}\r\n\t\t\r\n\t\tpublic ST_Zip()\r\n\t\t{\r\n\t\t\tZip5 = new ST_Zip5();\r\n\t\t\tZip4 = new ST_Zip4();\r\n\t\t}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_State" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="e26db9d9-fd55-461b-8bec-50a682001032" Visible="true" Text="ST_State" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>677</X>
        <Y>-327</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>677</X>
      <Y>-327</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_State : ISemanticType \r\n\t{\r\n\t\tpublic string State {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_City" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="69be8dd9-6264-4840-8d04-beeecec00c47" Visible="true" Text="ST_City" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>677</X>
        <Y>-363</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>677</X>
      <Y>-363</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_City : ISemanticType \r\n\t{\r\n\t\tpublic string City {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_Address" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="d089633a-44fa-4f96-b798-80b8a157bc2d" Visible="true" Text="ST_Address" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>677</X>
        <Y>-398</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>26</Height>
      </Size>
      <X>677</X>
      <Y>-398</Y>
      <Width>177</Width>
      <Height>26</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>3</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Address : ISemanticType \r\n\t{\r\n\t\tpublic string Address1 {get; set;}\r\n\t\tpublic string Address2 {get; set;}\r\n\t\tpublic ST_City City {get; set;}\r\n\t\tpublic ST_State State {get; set;}\r\n\t\tpublic ST_Zip Zip {get; set;}\r\n\t\t\r\n\t\tpublic ST_Address()\r\n\t\t{\r\n\t\t\tCity = new ST_City();\r\n\t\t\tState = new ST_State();\r\n\t\t\tZip = new ST_Zip();\r\n\t\t\t\r\n\t\t\tAddress1 = \"565 Roxbury Rd\";\r\n\t\t\tCity.City = \"Hudson\";\r\n\t\t\tState.State = \"NY\";\r\n\t\t\tZip.Zip5.Zip5 = \"12534\";\r\n\t\t}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="USPSAddressVerifier" ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="f50644e3-45fb-4fb4-b914-df7644b5fd69" Visible="true" Text="USPS&#xD;&#xA;Address&#xD;&#xA;Verifier" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>-77</X>
        <Y>384</Y>
      </Location>
      <Size>
        <Width>81</Width>
        <Height>71</Height>
      </Size>
      <X>-77</X>
      <Y>384</Y>
      <Width>81</Width>
      <Height>71</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Windows.Forms;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class USPSAddressVerifier : IReceptor\r\n\t{\r\n\t\t[Publishes(typeof(ST_USPSAddressValidateRequest))]\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_Address addr)\r\n\t\t{\r\n\t\t\tAddressValidateRequest avr = new AddressValidateRequest();\r\n\t\t\t// USPS reverses the two address lines.\r\n\t\t\t\r\n\t\t\tif (addr.Address2 == null)\r\n\t\t\t{\r\n\t\t\t\t// Address2, if not provided, must be an empty string, not null! \r\n\t\t\t\taddr.Address2 = String.Empty;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tavr.Address.Address1 = addr.Address2;\r\n\t\t\tavr.Address.Address2 = addr.Address1;\r\n\t\t\tavr.Address.City = addr.City.City;\r\n\t\t\tavr.Address.State = addr.State.State;\r\n\t\t\tavr.Address.Zip5 = addr.Zip.Zip5.Zip5;\r\n\t\t\t\r\n\t\t\tproc.ProcessInstanceFrom&lt;HopeMembrane&gt;(membrane, this, new ST_USPSAddressValidateRequest() {Request = avr});\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="2315a6c6-4e6c-425a-b0de-0e9db0107e62" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>1273</X>
        <Y>-321</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>1273</X>
      <Y>-321</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"System.Windows.Forms.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="8542d9f4-9cbd-4316-808a-6d8263539e9a" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>1273</X>
        <Y>-362</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>1273</X>
      <Y>-362</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"System.Speech.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="ad7069d0-7962-44b4-945f-13f3b05d74ff" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>987</X>
        <Y>-363</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>987</X>
      <Y>-363</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"Newtonsoft.Json.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="20094617-1d39-45cf-9f76-9dc4b1492528" Visible="true" Text="WebServer.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>1230</X>
        <Y>-538</Y>
      </Location>
      <Size>
        <Width>170</Width>
        <Height>29</Height>
      </Size>
      <X>1230</X>
      <Y>-538</Y>
      <Width>170</Width>
      <Height>29</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>WebServer.cs</ExtraData>
    <Json>{"csharp":"","Code":"/* \r\n* Copyright (c) Marc Clifton\r\n* The Code Project Open License (CPOL) 1.02\r\n* http://www.codeproject.com/info/cpol10.aspx\r\n*/\r\n\r\nusing System;\r\nusing System.IO;\r\nusing System.Net;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\n\r\nnamespace App\r\n{\r\n\tpublic class HandlerResponse\r\n\t{\r\n\t\tpublic string Text {get;set;}\r\n\t\tpublic string Mime {get;set;}\r\n\t\t\r\n\t\tpublic HandlerResponse(string text, string mime)\r\n\t\t{\r\n\t\t\tText=text;\r\n\t\t\tMime=mime;\r\n\t\t}\r\n\t}\r\n\t\r\n    public class WebServer\r\n    {\r\n        protected HttpListener listener;\r\n\t\tprotected BaseRouteHandlers routeHandlers;\r\n\r\n        public WebServer(BaseRouteHandlers routeHandlers)\r\n        {\r\n\t\t\tthis.routeHandlers = routeHandlers;\r\n        }\r\n\r\n        public void Start(string ip, int[] ports)\r\n        {\r\n            listener = new HttpListener();\r\n\r\n            foreach (int port in ports)\r\n            {\r\n                string url = IpWithPort(ip, port);\r\n                listener.Prefixes.Add(url);\r\n            }\r\n\r\n            listener.Start();\r\n            Task.Run(() =&gt; WaitForConnection(listener));\r\n        }\r\n\r\n        protected void WaitForConnection(object objListener)\r\n        {\r\n            HttpListener listener = (HttpListener)objListener;\r\n\r\n            while (true)\r\n            {\r\n                // Wait for a connection.  Return to caller while we wait.\r\n                HttpListenerContext context = listener.GetContext();\r\n\r\n                // Redirect to HTTPS if not local and not secure.\r\n                if (!context.Request.IsLocal &amp;&amp; !context.Request.IsSecureConnection)\r\n                {\r\n                    string redirectUrl = context.Request.Url.ToString().Replace(\"http:\", \"https:\");\r\n                    context.Response.Redirect(redirectUrl);\r\n                    context.Response.Close();\r\n                }\r\n                else\r\n                {\r\n                    string data = new StreamReader(context.Request.InputStream, context.Request.ContentEncoding).ReadToEnd();\r\n                    ProcessRoute(context, data);\r\n                }\r\n            }\r\n        }\r\n\r\n        protected void ProcessRoute(HttpListenerContext context, string data)\r\n        {\r\n        \tApp.Program.Log(context.Request.Url.ToString());\r\n            //Program.form.Invoke(() =&gt;\r\n            //{\r\n            //    Program.tbLog.AppendText(context.Request.Url.ToString() + \"\\n\");\r\n            //    Program.tbLog.AppendText(data + \"\\n\");\r\n            //});\r\n\r\n            string route = context.Request.Url.ToString().LeftOf('?').RightOfRightmostOf('/');\r\n            string parms = context.Request.Url.ToString().RightOf('?');\r\n            Func&lt;HttpListenerContext, string, HandlerResponse&gt; handler;\r\n\r\n            if (routeHandlers.Routes.TryGetValue(route, out handler))\r\n            {\r\n                try\r\n                {\r\n                    var resp = handler(context, parms);\r\n\t\t\t\t\tResponse(context, resp.Text, resp.Mime);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                \tApp.Program.Log(ex.Message);\r\n                \tApp.Program.Log(ex.StackTrace);\r\n                    //Program.form.BeginInvoke(() =&gt;\r\n                    //{\r\n                    //    Program.tbLog.AppendText(ex.Message + \"\\n\");\r\n                    //    Program.tbLog.AppendText(ex.StackTrace + \"\\n\");\r\n                    //});\r\n                }\r\n            }\r\n\r\n            context.Response.Close();\r\n        }\r\n\r\n\r\n        protected void Response(HttpListenerContext context, string resp, string contentType)\r\n        {\r\n            byte[] utf8data = Encoding.UTF8.GetBytes(resp);\r\n            context.Response.ContentType = contentType;\r\n            context.Response.ContentEncoding = Encoding.UTF8;\r\n            context.Response.ContentLength64 = utf8data.Length;\r\n            context.Response.OutputStream.Write(utf8data, 0, utf8data.Length);\r\n        }\r\n\r\n        protected string IpWithPort(string ip, int port)\r\n        {\r\n            string ret;\r\n\r\n            if (port == 80)\r\n            {\r\n                ret = \"http://\" + ip + \"/\";\r\n            }\r\n            else if ((ip == \"localhost\") || (ip == \"127.0.0.1\"))\r\n            {\r\n                ret = \"http://\" + ip + \":\" + port.ToString() + \"/\";\r\n            }\r\n            else\r\n            {\r\n                ret = \"https://\" + ip + \":\" + port.ToString() + \"/\";\r\n            }\r\n\r\n            return ret;\r\n        }\r\n    }\r\n}","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="dd819e71-71c1-47d7-9665-eac015c27399" Visible="true" Text="BaseRouteHandlers.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>1228</X>
        <Y>-581</Y>
      </Location>
      <Size>
        <Width>169</Width>
        <Height>28</Height>
      </Size>
      <X>1228</X>
      <Y>-581</Y>
      <Width>169</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>BaseRouteHandlers.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Net;\r\n\r\nnamespace App\r\n{\r\n\tpublic abstract class BaseRouteHandlers\r\n\t{\r\n\t\tpublic Dictionary&lt;string, Func&lt;HttpListenerContext, string, HandlerResponse&gt;&gt; Routes { get { return routes; } }\r\n\t\tprotected Dictionary&lt;string, Func&lt;HttpListenerContext, string, HandlerResponse&gt;&gt; routes;\r\n\t}\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="29127689-242a-4fde-ba47-6c354be90efe" Visible="true" Text="HttpGet.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>1027</X>
        <Y>-516</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>1027</X>
      <Y>-516</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>HttpGet.cs</ExtraData>
    <Json>{"csharp":"","Code":"/* \r\n* Copyright (c) Marc Clifton\r\n* The Code Project Open License (CPOL) 1.02\r\n* http://www.codeproject.com/info/cpol10.aspx\r\n*/\r\n\r\nusing System.Net;\r\nusing System.IO;\r\n\r\nnamespace App\r\n{\r\n    public static class Http\r\n    {\r\n        public static string Get(string uri)\r\n        {\r\n            WebClient client = new WebClient();\r\n\r\n            // Add a user agent header in case the \r\n            // requested URI contains a query.\r\n\r\n            client.Headers.Add(\"user-agent\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR 1.0.3705;)\");\r\n\r\n            Stream data = client.OpenRead(uri);\r\n            StreamReader reader = new StreamReader(data);\r\n            string s = reader.ReadToEnd();\r\n            data.Close();\r\n            reader.Close();\r\n\r\n            return s;\r\n        }\r\n    }\r\n}","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="4c3c3153-d602-4b7d-b49a-1eee1d529c87" Visible="true" Text="PythonLauncher.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>1027</X>
        <Y>-456</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>1027</X>
      <Y>-456</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>PythonLauncher.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Windows.Forms;\r\n\r\nnamespace App\r\n{\r\n\tpublic static class PythonLauncher\r\n\t{\r\n        public static Process LaunchProcess(string arguments, Action&lt;string&gt; onOutput, Action&lt;string&gt; onError = null)\r\n        {\r\n        \tstring processName = \"python\";\r\n            Process p = new Process();\r\n            p.StartInfo.UseShellExecute = false;\r\n            p.StartInfo.RedirectStandardOutput = true;\r\n            p.StartInfo.RedirectStandardError = true;\r\n            p.StartInfo.RedirectStandardInput = true;\r\n            p.StartInfo.FileName = processName;\r\n            p.StartInfo.Arguments = arguments;\r\n            p.StartInfo.CreateNoWindow = true;\r\n\r\n            p.OutputDataReceived += (sndr, args) =&gt; { if (args.Data != null) onOutput(args.Data); };\r\n\r\n            if (onError != null)\r\n            {\r\n                p.ErrorDataReceived += (sndr, args) =&gt; { if (args.Data != null) onError(args.Data); };\r\n            }\r\n\r\n            p.Start();\r\n\r\n            // Interestingly, this has to be called after Start().\r\n            p.BeginOutputReadLine();\r\n            p.BeginErrorReadLine();\r\n\r\n            return p;\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.PythonFileBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="ca41cfcd-3221-451f-9455-7d402738e941" Visible="true" Text="personOfInterest.py" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>1189</X>
        <Y>-459</Y>
      </Location>
      <Size>
        <Width>158</Width>
        <Height>30</Height>
      </Size>
      <X>1189</X>
      <Y>-459</Y>
      <Width>158</Width>
      <Height>30</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>personOfInterest.py</ExtraData>
    <Json>{"python":"#pylint: disable=C0111, C0301, C0303, W0311, W0614, W0401, W0232, W0702, W0703, W0201\r\n# Make sure pip and setup tools are up to date:\r\n# python -m pip install -U pip\r\n# pip install -U setuptools\r\n# pip install requests\r\n# pip install lxml\r\n# pip install cssselect\nimport requests\r\nimport sys\r\nfrom lxml import html\r\nfrom lxml.cssselect import CSSSelector\r\nfrom lxml import etree\r\n \r\nurl = \"http://www.onthisday.com/birthdays/\" + sys.argv[1] + \"/\" + sys.argv[2]\r\n# print(\"URL: \" + url)\r\npage = requests.get(url)\r\ntree = html.fromstring(page.content)\r\nsel = CSSSelector('.section--person-of-interest')\r\npois = sel(tree)\r\n \r\nfor poi in pois:\r\n print(poi.xpath(\"div/div/div[1]/p\")[0].text_content().encode('cp437', errors='replace'))\r\n \r\n ","TextChanged":"True","GenerateClass":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="8b3c784b-1c12-49a7-8a14-9915b5186b09" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>988</X>
        <Y>-321</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>988</X>
      <Y>-321</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"Clifton.Core.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="8b9f01b6-ec00-404f-9c65-41b3e5825032" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>987</X>
        <Y>-278</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>987</X>
      <Y>-278</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"Clifton.SemanticProcessorService.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="feeebccf-5a55-4dda-ae05-ea32129176fc" Visible="true" Text="Program.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCenterAnchor="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false" HasCenterConnection="false">
    <DisplayRectangle>
      <Location>
        <X>1026</X>
        <Y>-586</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>1026</X>
      <Y>-586</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>Program.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\n\r\nusing Newtonsoft.Json;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\nusing Clifton.Core.Semantics;\r\nusing Clifton.Core.Services.SemanticProcessorService;\r\n\r\nnamespace App\r\n{\r\n\tpublic class HopeMembrane : Membrane { }\r\n\t\r\n    /// &lt;summary&gt;\r\n    /// For testing the FlowSharpHopeService.StandAloneRunner.\r\n    /// Note that this project references a DLL built by FlowSharpHopeService.\r\n    /// &lt;/summary&gt;\r\n    public static class Program\r\n    {\r\n        public static TextBox tbLog;\r\n        public static Form form;\r\n\t\tpublic static SemanticProcessor sp;\r\n\t\tpublic static LayoutManager layoutManager;\r\n\r\n\t\tprivate static string url = \"http://localhost:5002/\";\r\n\t\tprivate static string PROCESSING = \"processing\";\r\n\r\n\t\t[STAThread]\r\n        public static void Main()\r\n        {\r\n            Application.EnableVisualStyles();\r\n            Application.SetCompatibleTextRenderingDefault(false);\r\n            \r\n            layoutManager = new LayoutManager();\r\n\r\n\t\t\tsp = new SemanticProcessor();\r\n\t\t\tsp.Processing += Processing;\r\n\r\n\t\t\tRouteHandlers routeHandlers = new RouteHandlers(sp);\r\n\r\n            WebServer webServer = new WebServer(routeHandlers);\r\n            webServer.Start(\"localhost\", new int[] { 5001 });\r\n\r\n            form = new Form();\r\n            form.Location = new Point(100, 100);\r\n            form.Size = new Size(500, 200);\r\n            form.Text = \"Stand Alone Runner\";\r\n\r\n            tbLog = new TextBox();\r\n            tbLog.Multiline = true;\r\n            tbLog.Dock = DockStyle.Fill;\r\n            form.Controls.Add(tbLog);\r\n\r\n            Application.Run(form);\r\n        }\r\n        \r\n        public static void Close()\r\n        {\r\n        \tform.Close();\r\n        }\r\n        \r\n        public static void Log(string msg)\r\n        {\r\n        \tform.Invoke(()=&gt;tbLog.AppendText(msg + \"\\r\\n\"));\r\n        }\r\n\r\n\t\tprivate static void Processing(object sender, ProcessEventArgs args)\r\n\t\t{\r\n\t\t\tstring fromMembraneTypeName = null;\r\n\t\t\tstring fromReceptorTypeName = null;\r\n\t\t\t\r\n\t\t\tif (args.FromMembrane != null)\r\n\t\t\t{\r\n\t\t\t\tfromMembraneTypeName = args.FromMembrane.GetType().FullName;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (args.FromReceptor != null)\r\n\t\t\t{\r\n\t\t\t\tfromReceptorTypeName = args.FromReceptor.GetType().FullName;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tstring json = JsonConvert.SerializeObject(new\r\n\t\t\t{\r\n\t\t\t\tFromMembraneTypeName = fromMembraneTypeName,\r\n\t\t\t\tFromReceptorTypeName = fromReceptorTypeName,\r\n\t\t\t\tToMembraneTypeName = args.ToMembrane.GetType().FullName,\r\n\t\t\t\tToReceptorTypeName = args.ToReceptor.GetType().FullName,\r\n\t\t\t\tSemanticTypeTypeName = args.SemanticType.GetType().FullName,\r\n\t\t\t});\r\n\r\n\t\t\tHttp.Get(url + PROCESSING + \"?proc=\" + json);\r\n\t\t}\r\n\t}\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
</ArrayOfElementPropertyBag>