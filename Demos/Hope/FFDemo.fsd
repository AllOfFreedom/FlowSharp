<?xml version="1.0" encoding="utf-16"?>
<ArrayOfElementPropertyBag xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <ElementPropertyBag Name="ST_Zip4" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="7b267d2f-8ebb-48ef-bb1e-1d3a13cc1c1e" Visible="true" Text="ST_Zip4" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>265</X>
        <Y>471</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>265</X>
      <Y>471</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Zip4 : ISemanticType \r\n\t{\r\n\t\tpublic ST_Zip4 Zip {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_Zip5" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="f8d28f56-3edd-4062-8169-03cf177f18cb" Visible="true" Text="ST_Zip5" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>265</X>
        <Y>435</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>265</X>
      <Y>435</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Zip5 : ISemanticType \r\n\t{\r\n\t\tpublic string Zip {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_Zip" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="cb4730f1-ba4d-4e13-af2b-12d0761f7075" Visible="true" Text="ST_Zip" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>265</X>
        <Y>392</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>265</X>
      <Y>392</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Zip : ISemanticType \r\n\t{\r\n\t\tpublic ST_Zip5 Zip5 {get; set;}\r\n\t\tpublic ST_Zip4 Zip4 {get; set;}\r\n\t\t\r\n\t\tpublic ST_Zip()\r\n\t\t{\r\n\t\t\tZip5 = new ST_Zip5();\r\n\t\t\tZip4 = new ST_Zip4();\r\n\t\t}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_State" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="278ce816-805d-4151-a994-18cca56b1468" Visible="true" Text="ST_State" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>265</X>
        <Y>357</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>265</X>
      <Y>357</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_State : ISemanticType \r\n\t{\r\n\t\tpublic string State {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_City" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="8fd3a59f-e65d-4ae5-9faf-c4d9d87c434c" Visible="true" Text="ST_City" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>265</X>
        <Y>321</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>265</X>
      <Y>321</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_City : ISemanticType \r\n\t{\r\n\t\tpublic string City {get; set;}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="ST_Address" ElementName="HopeShapes.SemanticTypeShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="edd65443-93f0-4ad2-9879-4b8229283dbe" Visible="true" Text="ST_Address" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>265</X>
        <Y>286</Y>
      </Location>
      <Size>
        <Width>177</Width>
        <Height>28</Height>
      </Size>
      <X>265</X>
      <Y>286</Y>
      <Width>177</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>8.25</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing Clifton.Core.Semantics;\r\n\r\nusing Newtonsoft.Json;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ST_Address : ISemanticType \r\n\t{\r\n\t\tpublic string Address1 {get; set;}\r\n\t\tpublic string Address2 {get; set;}\r\n\t\tpublic string City {get; set;}\r\n\t\tpublic string State {get; set;}\r\n\t\tpublic string Zip5 {get; set;}\r\n\t\t// public ST_City City {get; set;}\r\n\t\t// public ST_State State {get; set;}\r\n\t\t// public ST_Zip Zip {get; set;}\r\n\t\t\r\n\t\tpublic ST_Address()\r\n\t\t{\r\n\t\t\t// City = new ST_City();\r\n\t\t\t// State = new ST_State();\r\n\t\t\t// Zip = new ST_Zip();\r\n\t\t}\r\n\t}\r\n}","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-7278960</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag Name="AddressVerifier" ElementName="HopeShapes.AgentShape, HopeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="eddcb6ea-d5cd-434d-8448-4692b0fd77fc" Visible="true" Text="Address&#xD;&#xA;Verifier" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>220</X>
        <Y>138</Y>
      </Location>
      <Size>
        <Width>85</Width>
        <Height>76</Height>
      </Size>
      <X>220</X>
      <Y>138</Y>
      <Width>85</Width>
      <Height>76</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"Code":"using System;\r\nusing System.Windows.Forms;\r\n\r\nusing Clifton.Core.Semantics;\r\n\r\nusing FlowSharpRestService;\r\n\r\nnamespace App\r\n{\r\n\tpublic class ShowText : IReceptor\r\n\t{\r\n\t\tpublic void Process(ISemanticProcessor proc, IMembrane membrane, ST_Address text)\r\n\t\t{\r\n\t\t}\r\n    }\r\n}\r\n","TextChanged":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>MiddleCenter</TextAlign>
    <Multiline>true</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-5185306</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="54d9b5dd-cb0f-4e0b-8289-ed81d4cc1323" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>1058</X>
        <Y>217</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>1058</X>
      <Y>217</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"System.Windows.Forms.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="fb53d778-54e3-47ae-9a2a-1f69626ff406" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>1058</X>
        <Y>176</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>1058</X>
      <Y>176</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"System.Speech.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="6cf0f8d4-9f72-43d1-95d8-2baa9ed3d368" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>772</X>
        <Y>175</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>772</X>
      <Y>175</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"Newtonsoft.Json.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="014bcbce-6b34-4d7f-a101-c5f741d68543" Visible="true" Text="WebServer.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>1015</X>
        <Y>0</Y>
      </Location>
      <Size>
        <Width>170</Width>
        <Height>29</Height>
      </Size>
      <X>1015</X>
      <Y>0</Y>
      <Width>170</Width>
      <Height>29</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>WebServer.cs</ExtraData>
    <Json>{"csharp":"","Code":"/* \r\n* Copyright (c) Marc Clifton\r\n* The Code Project Open License (CPOL) 1.02\r\n* http://www.codeproject.com/info/cpol10.aspx\r\n*/\r\n\r\nusing System;\r\nusing System.IO;\r\nusing System.Net;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\n\r\nnamespace FlowSharpHopeCommon\r\n{\r\n\tpublic class HandlerResponse\r\n\t{\r\n\t\tpublic string Text {get;set;}\r\n\t\tpublic string Mime {get;set;}\r\n\t\t\r\n\t\tpublic HandlerResponse(string text, string mime)\r\n\t\t{\r\n\t\t\tText=text;\r\n\t\t\tMime=mime;\r\n\t\t}\r\n\t}\r\n\t\r\n    public class WebServer\r\n    {\r\n        protected HttpListener listener;\r\n\t\tprotected BaseRouteHandlers routeHandlers;\r\n\r\n        public WebServer(BaseRouteHandlers routeHandlers)\r\n        {\r\n\t\t\tthis.routeHandlers = routeHandlers;\r\n        }\r\n\r\n        public void Start(string ip, int[] ports)\r\n        {\r\n            listener = new HttpListener();\r\n\r\n            foreach (int port in ports)\r\n            {\r\n                string url = IpWithPort(ip, port);\r\n                listener.Prefixes.Add(url);\r\n            }\r\n\r\n            listener.Start();\r\n            Task.Run(() =&gt; WaitForConnection(listener));\r\n        }\r\n\r\n        protected void WaitForConnection(object objListener)\r\n        {\r\n            HttpListener listener = (HttpListener)objListener;\r\n\r\n            while (true)\r\n            {\r\n                // Wait for a connection.  Return to caller while we wait.\r\n                HttpListenerContext context = listener.GetContext();\r\n\r\n                // Redirect to HTTPS if not local and not secure.\r\n                if (!context.Request.IsLocal &amp;&amp; !context.Request.IsSecureConnection)\r\n                {\r\n                    string redirectUrl = context.Request.Url.ToString().Replace(\"http:\", \"https:\");\r\n                    context.Response.Redirect(redirectUrl);\r\n                    context.Response.Close();\r\n                }\r\n                else\r\n                {\r\n                    string data = new StreamReader(context.Request.InputStream, context.Request.ContentEncoding).ReadToEnd();\r\n                    ProcessRoute(context, data);\r\n                }\r\n            }\r\n        }\r\n\r\n        protected void ProcessRoute(HttpListenerContext context, string data)\r\n        {\r\n        \tApp.Program.Log(context.Request.Url.ToString());\r\n            //Program.form.Invoke(() =&gt;\r\n            //{\r\n            //    Program.tbLog.AppendText(context.Request.Url.ToString() + \"\\n\");\r\n            //    Program.tbLog.AppendText(data + \"\\n\");\r\n            //});\r\n\r\n            string route = context.Request.Url.ToString().RightOfRightmostOf('/').LeftOf('?');\r\n            string parms = context.Request.Url.ToString().RightOf('?');\r\n            Func&lt;HttpListenerContext, string, HandlerResponse&gt; handler;\r\n\r\n            if (routeHandlers.Routes.TryGetValue(route, out handler))\r\n            {\r\n                try\r\n                {\r\n                    var resp = handler(context, parms);\r\n\t\t\t\t\tResponse(context, resp.Text, resp.Mime);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                \tApp.Program.Log(ex.Message);\r\n                    //Program.form.BeginInvoke(() =&gt;\r\n                    //{\r\n                    //    Program.tbLog.AppendText(ex.Message + \"\\n\");\r\n                    //    Program.tbLog.AppendText(ex.StackTrace + \"\\n\");\r\n                    //});\r\n                }\r\n            }\r\n\r\n            context.Response.Close();\r\n        }\r\n\r\n\r\n        protected void Response(HttpListenerContext context, string resp, string contentType)\r\n        {\r\n            byte[] utf8data = Encoding.UTF8.GetBytes(resp);\r\n            context.Response.ContentType = contentType;\r\n            context.Response.ContentEncoding = Encoding.UTF8;\r\n            context.Response.ContentLength64 = utf8data.Length;\r\n            context.Response.OutputStream.Write(utf8data, 0, utf8data.Length);\r\n        }\r\n\r\n        protected string IpWithPort(string ip, int port)\r\n        {\r\n            string ret;\r\n\r\n            if (port == 80)\r\n            {\r\n                ret = \"http://\" + ip + \"/\";\r\n            }\r\n            else if ((ip == \"localhost\") || (ip == \"127.0.0.1\"))\r\n            {\r\n                ret = \"http://\" + ip + \":\" + port.ToString() + \"/\";\r\n            }\r\n            else\r\n            {\r\n                ret = \"https://\" + ip + \":\" + port.ToString() + \"/\";\r\n            }\r\n\r\n            return ret;\r\n        }\r\n    }\r\n}","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="6f1e1112-91af-46e7-9646-9059ef241088" Visible="true" Text="BaseRouteHandlers.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>1013</X>
        <Y>-43</Y>
      </Location>
      <Size>
        <Width>169</Width>
        <Height>28</Height>
      </Size>
      <X>1013</X>
      <Y>-43</Y>
      <Width>169</Width>
      <Height>28</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>BaseRouteHandlers.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Net;\r\n\r\nnamespace FlowSharpHopeCommon\r\n{\r\n\tpublic abstract class BaseRouteHandlers\r\n\t{\r\n\t\tpublic Dictionary&lt;string, Func&lt;HttpListenerContext, string, HandlerResponse&gt;&gt; Routes { get { return routes; } }\r\n\t\tprotected Dictionary&lt;string, Func&lt;HttpListenerContext, string, HandlerResponse&gt;&gt; routes;\r\n\t}\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="9fbfed10-4209-446d-8b1f-4d9bbb210b0c" Visible="true" Text="HttpGet.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>812</X>
        <Y>22</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>812</X>
      <Y>22</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>HttpGet.cs</ExtraData>
    <Json>{"csharp":"","Code":"/* \r\n* Copyright (c) Marc Clifton\r\n* The Code Project Open License (CPOL) 1.02\r\n* http://www.codeproject.com/info/cpol10.aspx\r\n*/\r\n\r\nusing System.Net;\r\nusing System.IO;\r\n\r\nnamespace FlowSharpRestService\r\n{\r\n    public static class Http\r\n    {\r\n        public static string Get(string uri)\r\n        {\r\n            WebClient client = new WebClient();\r\n\r\n            // Add a user agent header in case the \r\n            // requested URI contains a query.\r\n\r\n            client.Headers.Add(\"user-agent\", \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR 1.0.3705;)\");\r\n\r\n            Stream data = client.OpenRead(uri);\r\n            StreamReader reader = new StreamReader(data);\r\n            string s = reader.ReadToEnd();\r\n            data.Close();\r\n            reader.Close();\r\n\r\n            return s;\r\n        }\r\n    }\r\n}","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="844bdbf9-a6de-4b81-a774-615065d65611" Visible="true" Text="RouteHandlers.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>812</X>
        <Y>-11</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>812</X>
      <Y>-11</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>RouteHandlers.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Linq;\r\nusing System.Net;\r\nusing System.Reflection;\r\n\r\nusing Newtonsoft.Json;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\nusing Clifton.Core.Semantics;\r\nusing Clifton.Core.Services.SemanticProcessorService;\r\n\r\nusing FlowSharpHopeCommon;\r\n\r\nnamespace App\r\n{\r\n\tpublic class RouteHandlers : BaseRouteHandlers\r\n\t{\r\n\t\tprotected const string INSTANTIATE_RECEPTOR = \"instantiateReceptor\";\r\n        protected const string INSTANTIATE_RECEPTORS = \"instantiateReceptors\";\r\n\t\tprotected const string INSTANTIATE_SEMANTIC_TYPE = \"instantiateSemanticType\";\r\n\t\tprotected const string PUBLISH_SEMANTIC_TYPE = \"publishSemanticType\";\r\n\t\tprotected const string ENABLE_DISABLE_RECEPTOR = \"enableDisableReceptor\";\r\n        protected const string CLOSE = \"close\";\r\n\r\n\t\tprotected SemanticProcessor sp;\r\n\t\tprotected string assyName;\r\n\r\n\t\t// TODO: Membrane needs to be added to the type name as well.\r\n\t\tprotected Dictionary&lt;string, IReceptor&gt; receptors = new Dictionary&lt;string, IReceptor&gt;();\r\n\r\n\t\tpublic RouteHandlers(SemanticProcessor sp)\r\n\t\t{\r\n\t\t\troutes = new Dictionary&lt;string, Func&lt;HttpListenerContext, string, HandlerResponse&gt;&gt;()\r\n\t\t\t{\r\n\t\t\t\t{INSTANTIATE_RECEPTOR, InstantiateReceptor},\r\n\t\t\t\t{INSTANTIATE_RECEPTORS, InstantiateReceptors},\r\n\t\t\t\t{INSTANTIATE_SEMANTIC_TYPE, InstantiateSemanticType },\r\n\t\t\t\t{PUBLISH_SEMANTIC_TYPE, PublishSemanticType },\r\n\t\t\t\t{ENABLE_DISABLE_RECEPTOR, EnableDisableReceptor },\r\n\t\t\t\t{CLOSE, Close },\r\n\t\t\t};\r\n\r\n\t\t\tthis.sp = sp;\r\n\t\t\tassyName = Process.GetCurrentProcess().ProcessName;\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse InstantiateReceptor(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\tstring typeName = data.RightOf('=');\r\n\t\t\tInstantiateReceptor(typeName);\r\n\r\n\t\t\treturn new HandlerResponse(\"OK\", \"text/text\");\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse InstantiateReceptors(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\tAssembly assy = Assembly.GetExecutingAssembly();\r\n\t\t\tvar receptors = assy.GetTypes().Where(t =&gt; t.IsClass &amp;&amp; t.IsPublic &amp;&amp; t.GetInterfaces().Any(i=&gt;i.Name==\"IReceptor\")).ToList();\r\n\t\t\treceptors.ForEach(r=&gt;InstantiateReceptor(r.FullName));\r\n\t\t\t\r\n\t\t\treturn new HandlerResponse(\"OK\", \"text/text\");\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse InstantiateSemanticType(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\tType t = Type.GetType(\"App.\" + data.RightOf('=') + \", \" + assyName);\r\n\t\t\tISemanticType st = (ISemanticType)Activator.CreateInstance(t);\r\n\t\t\tstring json = JsonConvert.SerializeObject(st);\r\n\r\n\t\t\treturn new HandlerResponse(json, \"text/json\");\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse PublishSemanticType(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\t// TODO: Fix assumptions about ordering of params\r\n\t\t\tstring[] parms = data.Split('&amp;');\r\n\t\t\tType t = Type.GetType(\"App.\" + parms[0].RightOf('=') + \", \" + assyName);\r\n\t\t\tISemanticType st = (ISemanticType)JsonConvert.DeserializeObject(parms[1].RightOf('='), t);\r\n\t\t\tsp.ProcessInstance&lt;App.HopeMembrane&gt;(st);\r\n\r\n\t\t\treturn new HandlerResponse(\"OK\", \"text/text\");\r\n\t\t}\r\n\r\n\t\tprotected HandlerResponse EnableDisableReceptor(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\t// TODO: Fix assumptions about ordering of params\r\n\t\t\tstring[] parms = data.Split('&amp;');\r\n\t\t\tstring typeName = \"App.\" + parms[0].RightOf('=');\r\n\r\n\t\t\tif (parms[1].RightOf('=').to_b())\r\n\t\t\t{\r\n\t\t\t\t// enable\r\n\t\t\t\tif (!receptors.ContainsKey(typeName))\r\n\t\t\t\t{\r\n\t\t\t\t\tInstantiateReceptor(typeName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// disable\r\n\t\t\t\tIReceptor receptor;\r\n\r\n\t\t\t\tif (receptors.TryGetValue(typeName, out receptor))\r\n\t\t\t\t{\r\n\t\t\t\t\tsp.Unregister&lt;App.HopeMembrane&gt;(receptor);\r\n\t\t\t\t\treceptors.Remove(typeName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn new HandlerResponse(\"OK\", \"text/text\");\r\n\t\t}\r\n\t\t\r\n\t\tprotected HandlerResponse Close(HttpListenerContext context, string data)\r\n\t\t{\r\n\t\t\tProgram.Close();\r\n\t\t\t\r\n\t\t\treturn new HandlerResponse(\"OK\", \"text/text\");\r\n\t\t}\r\n\r\n\t\tprotected void InstantiateReceptor(string typeName)\r\n\t\t{\r\n\t\t\tProgram.form.BeginInvoke(() =&gt;\r\n\t\t\t{\r\n\t\t\t\tType t = Type.GetType(typeName + \", \" + assyName);\r\n\t\t\t\tIReceptor receptor = (IReceptor)Activator.CreateInstance(t);\r\n\t\t\t\tsp.Register&lt;App.HopeMembrane&gt;(receptor);\r\n\t\t\t\treceptors[typeName] = receptor;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="4b811e1d-c320-4607-ad9a-2dbab4769fd6" Visible="true" Text="PythonLauncher.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>812</X>
        <Y>82</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>812</X>
      <Y>82</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>PythonLauncher.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Windows.Forms;\r\n\r\nnamespace App\r\n{\r\n\tpublic static class PythonLauncher\r\n\t{\r\n        public static Process LaunchProcess(string arguments, Action&lt;string&gt; onOutput, Action&lt;string&gt; onError = null)\r\n        {\r\n        \tstring processName = \"python\";\r\n            Process p = new Process();\r\n            p.StartInfo.UseShellExecute = false;\r\n            p.StartInfo.RedirectStandardOutput = true;\r\n            p.StartInfo.RedirectStandardError = true;\r\n            p.StartInfo.RedirectStandardInput = true;\r\n            p.StartInfo.FileName = processName;\r\n            p.StartInfo.Arguments = arguments;\r\n            p.StartInfo.CreateNoWindow = true;\r\n\r\n            p.OutputDataReceived += (sndr, args) =&gt; { if (args.Data != null) onOutput(args.Data); };\r\n\r\n            if (onError != null)\r\n            {\r\n                p.ErrorDataReceived += (sndr, args) =&gt; { if (args.Data != null) onError(args.Data); };\r\n            }\r\n\r\n            p.Start();\r\n\r\n            // Interestingly, this has to be called after Start().\r\n            p.BeginOutputReadLine();\r\n            p.BeginErrorReadLine();\r\n\r\n            return p;\r\n        }\r\n    }\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.PythonFileBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="deb3ca5f-9fb1-4428-b9fd-ecb500b3f654" Visible="true" Text="personOfInterest.py" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>993</X>
        <Y>82</Y>
      </Location>
      <Size>
        <Width>158</Width>
        <Height>30</Height>
      </Size>
      <X>993</X>
      <Y>82</Y>
      <Width>158</Width>
      <Height>30</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>personOfInterest.py</ExtraData>
    <Json>{"python":"#pylint: disable=C0111, C0301, C0303, W0311, W0614, W0401, W0232, W0702, W0703, W0201\r\n# Make sure pip and setup tools are up to date:\r\n# python -m pip install -U pip\r\n# pip install -U setuptools\r\n# pip install requests\r\n# pip install lxml\r\n# pip install cssselect\nimport requests\r\nimport sys\r\nfrom lxml import html\r\nfrom lxml.cssselect import CSSSelector\r\nfrom lxml import etree\r\n \r\nurl = \"http://www.onthisday.com/birthdays/\" + sys.argv[1] + \"/\" + sys.argv[2]\r\n# print(\"URL: \" + url)\r\npage = requests.get(url)\r\ntree = html.fromstring(page.content)\r\nsel = CSSSelector('.section--person-of-interest')\r\npois = sel(tree)\r\n \r\nfor poi in pois:\r\n print(poi.xpath(\"div/div/div[1]/p\")[0].text_content().encode('cp437', errors='replace'))\r\n \r\n ","TextChanged":"True","GenerateClass":"True"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="0519a2d8-853f-4683-b0fc-231a8eeb9fff" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>773</X>
        <Y>217</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>773</X>
      <Y>217</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"Clifton.Core.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.AssemblyReferenceBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="69286124-807e-4c5f-8fc4-ef3143a7c255" Visible="true" Text="AssyRef" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>772</X>
        <Y>260</Y>
      </Location>
      <Size>
        <Width>263</Width>
        <Height>31</Height>
      </Size>
      <X>772</X>
      <Y>260</Y>
      <Width>263</Width>
      <Height>31</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>6</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <Json>{"AssyRef":"Clifton.SemanticProcessorService.dll"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopCenter</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-16192</FillBrushColor>
  </ElementPropertyBag>
  <ElementPropertyBag ElementName="FlowSharpCodeShapes.CSharpClassBox, FlowSharpCodeShapes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Id="81d791e7-8071-4617-be95-cff063c29fa6" Visible="true" Text="Program.cs" IsBookmarked="false" HasCornerAnchors="true" HasCenterAnchors="true" HasLeftRightAnchors="false" HasTopBottomAnchors="false" HasCornerConnections="true" HasCenterConnections="true" HasLeftRightConnections="false" HasTopBottomConnections="false">
    <DisplayRectangle>
      <Location>
        <X>811</X>
        <Y>-48</Y>
      </Location>
      <Size>
        <Width>133</Width>
        <Height>25</Height>
      </Size>
      <X>811</X>
      <Y>-48</Y>
      <Width>133</Width>
      <Height>25</Height>
    </DisplayRectangle>
    <StartPoint>
      <X>0</X>
      <Y>0</Y>
    </StartPoint>
    <EndPoint>
      <X>0</X>
      <Y>0</Y>
    </EndPoint>
    <HyAdjust>0</HyAdjust>
    <VxAdjust>0</VxAdjust>
    <BorderPenWidth>1</BorderPenWidth>
    <StartCap>None</StartCap>
    <EndCap>None</EndCap>
    <StartConnectedShapeId>00000000-0000-0000-0000-000000000000</StartConnectedShapeId>
    <EndConnectedShapeId>00000000-0000-0000-0000-000000000000</EndConnectedShapeId>
    <TextFontFamily>Microsoft Sans Serif</TextFontFamily>
    <TextFontSize>10</TextFontSize>
    <TextFontUnderline>false</TextFontUnderline>
    <TextFontStrikeout>false</TextFontStrikeout>
    <TextFontItalic>false</TextFontItalic>
    <TextFontBold>false</TextFontBold>
    <ExtraData>Program.cs</ExtraData>
    <Json>{"csharp":"","Code":"using System;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\n\r\nusing Newtonsoft.Json;\r\n\r\nusing Clifton.Core.ExtensionMethods;\r\nusing Clifton.Core.Semantics;\r\nusing Clifton.Core.Services.SemanticProcessorService;\r\n\r\nusing FlowSharpHopeCommon;\r\nusing FlowSharpRestService;\r\n\r\nnamespace App\r\n{\r\n\tpublic class HopeMembrane : Membrane { }\r\n\t\r\n    /// &lt;summary&gt;\r\n    /// For testing the FlowSharpHopeService.StandAloneRunner.\r\n    /// Note that this project references a DLL built by FlowSharpHopeService.\r\n    /// &lt;/summary&gt;\r\n    public static class Program\r\n    {\r\n        public static TextBox tbLog;\r\n        public static Form form;\r\n\t\tpublic static SemanticProcessor sp;\r\n\r\n\t\tprivate static string url = \"http://localhost:5002/\";\r\n\t\tprivate static string PROCESSING = \"processing\";\r\n\r\n\t\t[STAThread]\r\n        public static void Main()\r\n        {\r\n            Application.EnableVisualStyles();\r\n            Application.SetCompatibleTextRenderingDefault(false);\r\n\r\n\t\t\tsp = new SemanticProcessor();\r\n\t\t\tsp.Processing += Processing;\r\n\r\n\t\t\tRouteHandlers routeHandlers = new RouteHandlers(sp);\r\n\r\n            WebServer webServer = new WebServer(routeHandlers);\r\n            webServer.Start(\"localhost\", new int[] { 5001 });\r\n\r\n            form = new Form();\r\n            form.Location = new Point(100, 100);\r\n            form.Size = new Size(500, 200);\r\n            form.Text = \"Stand Alone Runner\";\r\n\r\n            tbLog = new TextBox();\r\n            tbLog.Multiline = true;\r\n            tbLog.Dock = DockStyle.Fill;\r\n            form.Controls.Add(tbLog);\r\n\r\n            Application.Run(form);\r\n        }\r\n        \r\n        public static void Close()\r\n        {\r\n        \tform.Close();\r\n        }\r\n        \r\n        public static void Log(string msg)\r\n        {\r\n        \tform.Invoke(()=&gt;tbLog.AppendText(msg + \"\\r\\n\"));\r\n        }\r\n\r\n\t\tprivate static void Processing(object sender, ProcessEventArgs args)\r\n\t\t{\r\n\t\t\tstring fromMembraneTypeName = null;\r\n\t\t\tstring fromReceptorTypeName = null;\r\n\t\t\t\r\n\t\t\tif (args.FromMembrane != null)\r\n\t\t\t{\r\n\t\t\t\tfromMembraneTypeName = args.FromMembrane.GetType().FullName;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (args.FromReceptor != null)\r\n\t\t\t{\r\n\t\t\t\tfromReceptorTypeName = args.FromReceptor.GetType().FullName;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tstring json = JsonConvert.SerializeObject(new\r\n\t\t\t{\r\n\t\t\t\tFromMembraneTypeName = fromMembraneTypeName,\r\n\t\t\t\tFromReceptorTypeName = fromReceptorTypeName,\r\n\t\t\t\tToMembraneTypeName = args.ToMembrane.GetType().FullName,\r\n\t\t\t\tToReceptorTypeName = args.ToReceptor.GetType().FullName,\r\n\t\t\t\tSemanticTypeTypeName = args.SemanticType.GetType().FullName,\r\n\t\t\t});\r\n\r\n\t\t\tHttp.Get(url + PROCESSING + \"?proc=\" + json);\r\n\t\t}\r\n\t}\r\n}\r\n","TextChanged":"True","NamespaceName":"Namespace","ClassName":"Class","MethodName":"Method"}</Json>
    <Connections />
    <Children />
    <TextAlign>TopLeft</TextAlign>
    <Multiline>false</Multiline>
    <TextColor>-16777216</TextColor>
    <BorderPenColor>-16777216</BorderPenColor>
    <FillBrushColor>-1</FillBrushColor>
  </ElementPropertyBag>
</ArrayOfElementPropertyBag>